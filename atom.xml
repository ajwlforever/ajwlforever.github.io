<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>虞启贤</title>
  <icon>https://www.gravatar.com/avatar/2abcf6a5f72bad68445b90d7a2eeede4</icon>
  <subtitle>虞启贤的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.yqxblog.top/"/>
  <updated>2019-06-12T07:56:40.470Z</updated>
  <id>www.yqxblog.top/</id>
  
  <author>
    <name>虞启贤</name>
    <email>2353350597@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式之行为型</title>
    <link href="www.yqxblog.top/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    <id>www.yqxblog.top/设计模式/设计模式之行为型/</id>
    <published>2019-06-13T00:43:11.000Z</published>
    <updated>2019-06-12T07:56:40.470Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="www.yqxblog.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="www.yqxblog.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之结构型</title>
    <link href="www.yqxblog.top/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BB%93%E6%9E%84%E5%9E%8B/"/>
    <id>www.yqxblog.top/设计模式/设计模式之结构型/</id>
    <published>2019-06-12T06:00:00.000Z</published>
    <updated>2019-06-12T07:55:49.529Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="设计模式" scheme="www.yqxblog.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="www.yqxblog.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之创建型</title>
    <link href="www.yqxblog.top/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93_1/"/>
    <id>www.yqxblog.top/设计模式/设计模式总结_1/</id>
    <published>2019-06-11T13:00:00.000Z</published>
    <updated>2019-06-12T12:43:13.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="何谓创建型模式"><a href="#何谓创建型模式" class="headerlink" title="何谓创建型模式?"></a>何谓创建型模式?</h2><p><strong>创建型模式是处理对象创建的设计模式，试图根据实际情况使用合适的方式创建对象。创建型模式通过以某种方式控制对象的创建来解决问题。</strong></p><h5 id="1-创建型模式由两个主导思想构成。一是将系统使用的具体类封装起来，二是隐藏这些具体类的实例创建和结合的方式。"><a href="#1-创建型模式由两个主导思想构成。一是将系统使用的具体类封装起来，二是隐藏这些具体类的实例创建和结合的方式。" class="headerlink" title="1.创建型模式由两个主导思想构成。一是将系统使用的具体类封装起来，二是隐藏这些具体类的实例创建和结合的方式。"></a>1.创建型模式由两个主导思想构成。一是将系统使用的具体类封装起来，二是隐藏这些具体类的实例创建和结合的方式。</h5><h5 id="2-创建型模式又分为对象创建型模式和类创建型模式。对象创建型模式处理对象的创建，类创建型模式处理类的创建。详细地说，对象创建型模式把对象创建的一部分推迟到另一个对象中，而类创建型模式将它对象的创建推迟到子类中。"><a href="#2-创建型模式又分为对象创建型模式和类创建型模式。对象创建型模式处理对象的创建，类创建型模式处理类的创建。详细地说，对象创建型模式把对象创建的一部分推迟到另一个对象中，而类创建型模式将它对象的创建推迟到子类中。" class="headerlink" title="2.创建型模式又分为对象创建型模式和类创建型模式。对象创建型模式处理对象的创建，类创建型模式处理类的创建。详细地说，对象创建型模式把对象创建的一部分推迟到另一个对象中，而类创建型模式将它对象的创建推迟到子类中。"></a>2.创建型模式又分为对象创建型模式和类创建型模式。对象创建型模式处理对象的创建，类创建型模式处理类的创建。详细地说，对象创建型模式把对象创建的一部分推迟到另一个对象中，而类创建型模式将它对象的创建推迟到子类中。</h5><h3 id="一、单例模式"><a href="#一、单例模式" class="headerlink" title="一、单例模式"></a>一、单例模式</h3><p><strong>目的：</strong>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p><p><strong>举例：</strong><br>　　在OS中，打印池(Print Spooler)是一个用于管理打印任务的应用程序，通过打印池用户可以删除、中止或者改变打印任务的优先级，在一个系统中只允许运行一个打印池对象，如果重复创建打印池则抛出异常。现使用单例模式来模拟实现打印池的设计。<br> <img src="https://i.loli.net/2019/06/12/5d00ef8b776e039846.png" alt><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package 单例模式;</span><br><span class="line"></span><br><span class="line">public class Singleton &#123;</span><br><span class="line">private static Singleton instance;</span><br><span class="line">Singleton() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">public Singleton GetInstance()</span><br><span class="line">&#123;</span><br><span class="line">if(instance == null)</span><br><span class="line">&#123;</span><br><span class="line">instance = new Singleton();</span><br><span class="line">&#125;</span><br><span class="line">return instance;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">package 单例模式;</span><br><span class="line"></span><br><span class="line">public class Client &#123;</span><br><span class="line">  public static void main(String[] args)</span><br><span class="line">  &#123;</span><br><span class="line">  Singleton singleton = new Singleton();</span><br><span class="line">  Singleton s1 = singleton.GetInstance();</span><br><span class="line">  Singleton s2 = singleton.GetInstance();</span><br><span class="line">  Singleton s3 = new Singleton();</span><br><span class="line">  if(s1==s2)System.out.println(&quot;s1==s2&quot;);</span><br><span class="line">  if(s1==s3)System.out.println(&quot;s1==s3&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Result: s1==s2</span><br></pre></td></tr></table></figure></p><h3 id="二、工厂方法模式"><a href="#二、工厂方法模式" class="headerlink" title="二、工厂方法模式"></a>二、工厂方法模式</h3><p><strong>原理:</strong>定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">//实例基类，相当于Product(为了方便，没用抽象)</span><br><span class="line">class LeiFeng</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void Sweep()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;雷锋扫地&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//学雷锋的大学生，相当于ConcreteProduct（具体产品1）</span><br><span class="line">class Student: public LeiFeng</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void Sweep()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;大学生扫地&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//学雷锋的志愿者，相当于ConcreteProduct（具体产品2）</span><br><span class="line">class Volenter: public LeiFeng</span><br><span class="line">&#123;</span><br><span class="line">public :</span><br><span class="line">    virtual void Sweep()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;志愿者&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">-----------------------------</span><br><span class="line">//工场基类Creator</span><br><span class="line">class LeiFengFactory</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual LeiFeng* CreateLeiFeng() //返回值体现依赖关系</span><br><span class="line">    &#123;</span><br><span class="line">        return new LeiFeng();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//工场具体类1（创建大学生产品的具体工厂）</span><br><span class="line">class StudentFactory : public LeiFengFactory</span><br><span class="line">&#123;</span><br><span class="line">public :</span><br><span class="line">    virtual LeiFeng* CreateLeiFeng() //返回值体现依赖关系</span><br><span class="line">    &#123;</span><br><span class="line">        return new Student();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//工场具体类2（创建志愿者产品的具体工厂）</span><br><span class="line">class VolenterFactory : public LeiFengFactory</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual LeiFeng* CreateLeiFeng()</span><br><span class="line">    &#123;</span><br><span class="line">        return new Volenter(); //返回值体现依赖关系</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">-----------------------------</span><br><span class="line">//客户端</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    LeiFengFactory *sf=new StudentFactory(); //由客户端选创建什么产品</span><br><span class="line">    LeiFeng *s=sf-&gt;CreateLeiFeng();</span><br><span class="line">    s-&gt;Sweep();</span><br><span class="line">    delete s;</span><br><span class="line">    delete sf;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="三、抽象工厂模式"><a href="#三、抽象工厂模式" class="headerlink" title="三、抽象工厂模式"></a>三、抽象工厂模式</h3><p><strong>功能：</strong>提供一个创建一系列相关或相互依赖对象的接口,而无需指定它们具体的类。<br><strong>优缺点：</strong>遵循高内聚低耦合的设计目的，但无法避免开闭原则的倾斜性（增加新的工厂和产品族容易，增加新的产品等级结构麻烦，或反之）<br><strong>模式应用：</strong><br>　在很多软件系统中需要更换界面主题，要求界面中的按钮、文本框、背景色等一起发生改变时，可以使用抽象工厂模式进行设计。</p><p><img src="https://i.loli.net/2019/06/12/5d00f0bdba47d87017.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">//用户抽象接口(抽象产品A)</span><br><span class="line">class IUser</span><br><span class="line">&#123;</span><br><span class="line">public :</span><br><span class="line">    virtual void GetUser()=0;</span><br><span class="line">    virtual void InsertUser()=0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//部门抽象接口(抽象产品B)</span><br><span class="line">class IDepartment</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void GetDepartment()=0;</span><br><span class="line">    virtual void InsertDepartment()=0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//ACCESS用户（抽象产品A的产品1）</span><br><span class="line">class CAccessUser : public IUser</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void GetUser()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Access GetUser&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void InsertUser()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Access InsertUser&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//ACCESS部门（抽象产品B的产品1）</span><br><span class="line">class CAccessDepartment : public IDepartment</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void GetDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Access GetDepartment&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void InsertDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Access InsertDepartment&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//SQL用户（抽象产品A的产品2）</span><br><span class="line">class CSqlUser : public IUser</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void GetUser()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Sql User&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void InsertUser()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;Sql User&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//SQL部门类（抽象产品B的产品2）</span><br><span class="line">class CSqlDepartment: public IDepartment</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void GetDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;sql getDepartment&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void InsertDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;sql insertdepartment&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//抽象工厂</span><br><span class="line">class IFactory</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual IUser* CreateUser()=0;</span><br><span class="line">    virtual IDepartment* CreateDepartment()=0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//ACCESS工厂</span><br><span class="line">class AccessFactory : public IFactory</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual IUser* CreateUser()</span><br><span class="line">    &#123;</span><br><span class="line">        return new  CAccessUser();</span><br><span class="line">    &#125;</span><br><span class="line">    virtual IDepartment* CreateDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        return new CAccessDepartment();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//SQL工厂</span><br><span class="line">class SqlFactory : public IFactory</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual IUser* CreateUser()</span><br><span class="line">    &#123;</span><br><span class="line">        return new  CSqlUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual IDepartment* CreateDepartment()</span><br><span class="line">    &#123;</span><br><span class="line">        return new CSqlDepartment();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//客户端：</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    IFactory* factory= new SqlFactory();</span><br><span class="line">    IUser* user=factory-&gt;CreateUser();</span><br><span class="line">    IDepartment* depart = factory-&gt;CreateDepartment();</span><br><span class="line"></span><br><span class="line">    user-&gt;GetUser();</span><br><span class="line">    depart-&gt;GetDepartment();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="四、建造者模式"><a href="#四、建造者模式" class="headerlink" title="四、建造者模式"></a>四、建造者模式</h3><p><strong>功能：</strong>将一个复杂对象的构建与表示分离，使得同样的构建过程可以创建不同的表示。<br><strong>优缺点：</strong>一个指挥控制全部，可以精细的控制产品的创建过程，系统扩展方便，符合“开闭”。但产品越多越复杂，内部变多，会导致系统变复杂<br><strong>模式应用：</strong><br>很多游戏软件中，地图包括天空、地面、背景等组成部分，人物角色包括人体、服装、装备等组成部分，可以使用建造者模式对其进行设计，通过不同的具体建造者创建不同类型的地图或人物。<br><img src="https://i.loli.net/2019/06/12/5d00f251503d917985.png" alt><br><strong>举例：</strong> KFC套餐<br>套餐是一个复杂对象，一般包含主食（如汉堡、鸡肉卷等）和饮料（如果汁、 可乐等）等部分，不同的套餐有不同的组成部分，而KFC的服务员可以根据顾客的要求，一步一步装配这些组成部分，构造一份完整的套餐，然后返回给顾客。<br><img src="https://i.loli.net/2019/06/12/5d00f287de42455379.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">//最终的产品类</span><br><span class="line">class Product </span><br><span class="line">&#123;</span><br><span class="line">private:</span><br><span class="line">    vector&lt;string&gt; m_product;</span><br><span class="line">public:</span><br><span class="line">    void Add(string strtemp)</span><br><span class="line">    &#123;</span><br><span class="line">        m_product.push_back(strtemp);</span><br><span class="line">    &#125;</span><br><span class="line">    void Show()</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;string&gt;::iterator p=m_product.begin();</span><br><span class="line">        while (p!=m_product.end())</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;*p&lt;&lt;endl;</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//建造者基类</span><br><span class="line">class Builder</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    virtual void BuilderA()=0;</span><br><span class="line">    virtual void BuilderB()=0;</span><br><span class="line">    virtual Product* GetResult()=0;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//第一种建造方式</span><br><span class="line">class ConcreteBuilder1 : public Builder</span><br><span class="line">&#123;</span><br><span class="line">private:</span><br><span class="line">    Product* m_product; //体现依赖关系</span><br><span class="line">public:</span><br><span class="line">    ConcreteBuilder1()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product=new Product();</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void BuilderA()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product-&gt;Add(&quot;one&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void BuilderB()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product-&gt;Add(&quot;two&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    virtual Product* GetResult()</span><br><span class="line">    &#123;</span><br><span class="line">        return m_product;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//第二种建造方式</span><br><span class="line">class ConcreteBuilder2 : public Builder</span><br><span class="line">&#123;</span><br><span class="line">private:</span><br><span class="line">    Product * m_product;  //体现依赖关系</span><br><span class="line">public:</span><br><span class="line">    ConcreteBuilder2()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product=new Product();</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void BuilderA()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product-&gt;Add(&quot;A&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    virtual void BuilderB()</span><br><span class="line">    &#123;</span><br><span class="line">        m_product-&gt;Add(&quot;B&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    virtual Product* GetResult()</span><br><span class="line">    &#123;</span><br><span class="line">        return m_product;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//指挥者类</span><br><span class="line">class Direct</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    void Construct(Builder* temp) //构建一个使用Builder接口的对象</span><br><span class="line">    &#123;</span><br><span class="line">        temp-&gt;BuilderA();</span><br><span class="line">        temp-&gt;BuilderB();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//客户端</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    Direct *p=new Direct();</span><br><span class="line">    Builder* b1=new ConcreteBuilder1();</span><br><span class="line">    Builder* b2=new ConcreteBuilder2();</span><br><span class="line"></span><br><span class="line">    p-&gt;Construct(b1);                 //调用第一种建造方式</span><br><span class="line">    Product* pb1 = b1-&gt;GetResult();</span><br><span class="line">    pb1-&gt;Show();</span><br><span class="line"></span><br><span class="line">    p-&gt;Construct(b2);                 //调用第二种建造方式</span><br><span class="line">    Product * pb2 = b2-&gt;GetResult();</span><br><span class="line">    pb2-&gt;Show();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="五、原型模式"><a href="#五、原型模式" class="headerlink" title="五、原型模式"></a>五、原型模式</h3><p><strong>功能：</strong>用原型实例指定创建对象的种类，并通过拷贝这些原型创建新的对象。原型模式其实就是从一个对象创建另外一个可定制的对象，而且不需知道任何创建的细节。</p><blockquote><p>java java.lang.Cloneable 接口<br>c# ICloneable 接口</p></blockquote><p><img src="https://i.loli.net/2019/06/12/5d00f2e2e850613476.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">//抽象基类</span><br><span class="line">class Prototype  </span><br><span class="line">&#123; </span><br><span class="line">private:</span><br><span class="line">    string m_strName;</span><br><span class="line"></span><br><span class="line">public: </span><br><span class="line">    Prototype(string strName)&#123; m_strName = strName; &#125;</span><br><span class="line">    Prototype() &#123; m_strName = &quot; &quot;; &#125;</span><br><span class="line">    void Show() </span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;m_strName&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    virtual Prototype* Clone() = 0 ; //关键就在于这样一个抽象方法</span><br><span class="line">&#125; ; </span><br><span class="line"></span><br><span class="line">// class ConcretePrototype1 </span><br><span class="line">class ConcretePrototype1 : public Prototype </span><br><span class="line">&#123; </span><br><span class="line">public: </span><br><span class="line">    ConcretePrototype1(string strName) : Prototype(strName)&#123;&#125;</span><br><span class="line">    ConcretePrototype1()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    virtual Prototype* Clone() </span><br><span class="line">    &#123; </span><br><span class="line">        ConcretePrototype1 *p = new ConcretePrototype1() ; </span><br><span class="line">        *p = *this ;                         //复制对象 </span><br><span class="line">        return p ; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; ; </span><br><span class="line"></span><br><span class="line">// class ConcretePrototype2 </span><br><span class="line">class ConcretePrototype2 : public Prototype </span><br><span class="line">&#123; </span><br><span class="line">public: </span><br><span class="line">    ConcretePrototype2(string strName) : Prototype(strName)&#123;&#125;</span><br><span class="line">    ConcretePrototype2()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    virtual Prototype* Clone() </span><br><span class="line">    &#123; </span><br><span class="line">        ConcretePrototype2 *p = new ConcretePrototype2() ; </span><br><span class="line">        *p = *this ; //复制对象 </span><br><span class="line">        return p ; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; ; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//客户端</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    ConcretePrototype1* test = new ConcretePrototype1(&quot;小王&quot;);</span><br><span class="line">    ConcretePrototype2* test2 = (ConcretePrototype2*)test-&gt;Clone();</span><br><span class="line">    test-&gt;Show();</span><br><span class="line">    test2-&gt;Show();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;何谓创建型模式&quot;&gt;&lt;a href=&quot;#何谓创建型模式&quot; class=&quot;headerlink&quot; title=&quot;何谓创建型模式?&quot;&gt;&lt;/a&gt;何谓创建型模式?&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创建型模式是处理对象创建的设计模式，试图根据实际情况使用合适的方式创建对象。创建
      
    
    </summary>
    
      <category term="设计模式" scheme="www.yqxblog.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="www.yqxblog.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式实践_FPS游戏</title>
    <link href="www.yqxblog.top/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E8%B7%B5FPS%E6%B8%B8%E6%88%8F/"/>
    <id>www.yqxblog.top/设计模式/设计模式实践FPS游戏/</id>
    <published>2019-06-11T02:30:00.000Z</published>
    <updated>2019-06-12T12:43:19.054Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、地图切换；-–抽象工厂模式"><a href="#一、地图切换；-–抽象工厂模式" class="headerlink" title="一、地图切换；   –抽象工厂模式"></a>一、地图切换；   –抽象工厂模式</h3><p>每个地图是一个工厂，每个地图中的不同场景，敌人等等的是一个个的产品</p><p>人物移动；<br>人物状态：生存/死亡    – 状态模式 </p><h3 id="二、服装设计；-—建造者模式"><a href="#二、服装设计；-—建造者模式" class="headerlink" title="二、服装设计；  —建造者模式"></a>二、服装设计；  —建造者模式</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、地图切换；-–抽象工厂模式&quot;&gt;&lt;a href=&quot;#一、地图切换；-–抽象工厂模式&quot; class=&quot;headerlink&quot; title=&quot;一、地图切换；   –抽象工厂模式&quot;&gt;&lt;/a&gt;一、地图切换；   –抽象工厂模式&lt;/h3&gt;&lt;p&gt;每个地图是一个工厂，每个地图
      
    
    </summary>
    
      <category term="设计模式" scheme="www.yqxblog.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="www.yqxblog.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>排序算法（插入、）</title>
    <link href="www.yqxblog.top/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>www.yqxblog.top/数据结构/数据结构-排序算法/</id>
    <published>2019-06-11T00:43:11.000Z</published>
    <updated>2019-06-12T07:59:06.852Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、插入排序"><a href="#一、插入排序" class="headerlink" title="一、插入排序"></a>一、插入排序</h3><h4 id="1-是一种简单直观且稳定的排序算法。"><a href="#1-是一种简单直观且稳定的排序算法。" class="headerlink" title="1.是一种简单直观且稳定的排序算法。"></a>1.是一种简单直观且稳定的排序算法。</h4><h4 id="2-原理：将每个序列分为有序序列和无序序列，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前逐个进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。"><a href="#2-原理：将每个序列分为有序序列和无序序列，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前逐个进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。" class="headerlink" title="2.原理：将每个序列分为有序序列和无序序列，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前逐个进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。"></a>2.原理：将每个序列分为有序序列和无序序列，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前逐个进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。</h4><h4 id="3-时间复杂度为O-n2"><a href="#3-时间复杂度为O-n2" class="headerlink" title="3.时间复杂度为O(n2)"></a>3.时间复杂度为<strong>O(n<sup>2</sup>)</strong></h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> void InsertSort(int r[],int n)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    for(int i=2 ;i&lt;n;i++)</span><br><span class="line">    &#123;  </span><br><span class="line">        int j;</span><br><span class="line">        r[0]=r[i];     //目前无序序列的第一个数据放到r[0]</span><br><span class="line">        for(j=i-1;r[0]&lt;r[j];j--)  //从r[1]这个序列开始排序，r[0]挨个从有序序列的最后一个往前一个个比较</span><br><span class="line">        r[j+1]=r[j];</span><br><span class="line">        r[j+1] = r[0];   //比较完了，将目标数据插入到有序序列相应位置</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line"> int a[11] = &#123;0,4,1,5,6,3,2,8,7,9,10&#125;;</span><br><span class="line">    InsertSort(a,11);</span><br><span class="line">    for(int i =1 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="https://i.loli.net/2019/06/11/5cfefbfbbf55d37847.png" alt></p><h3 id="二、希尔排序"><a href="#二、希尔排序" class="headerlink" title="二、希尔排序"></a>二、希尔排序</h3><h4 id="1-希尔排序-Shell’s-Sort-是插入排序的一种又称“缩小增量排序”（Diminishing-Increment-Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因D-L-Shell于1959年提出而得名。"><a href="#1-希尔排序-Shell’s-Sort-是插入排序的一种又称“缩小增量排序”（Diminishing-Increment-Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因D-L-Shell于1959年提出而得名。" class="headerlink" title="1.希尔排序(Shell’s Sort)是插入排序的一种又称“缩小增量排序”（Diminishing Increment Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因D.L.Shell于1959年提出而得名。"></a>1.希尔排序(Shell’s Sort)是插入排序的一种又称“缩小增量排序”（Diminishing Increment Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因D.L.Shell于1959年提出而得名。</h4><h4 id="2-是对插入排序的改进，在插入排序中是以1为增量让有序序列的第一个值挨个和有序序列的进行比较希尔排序额中是以d为增，d慢慢减小到1，这个过程中不断让每一次排序的所用的比较次数减少。"><a href="#2-是对插入排序的改进，在插入排序中是以1为增量让有序序列的第一个值挨个和有序序列的进行比较希尔排序额中是以d为增，d慢慢减小到1，这个过程中不断让每一次排序的所用的比较次数减少。" class="headerlink" title="2.是对插入排序的改进，在插入排序中是以1为增量让有序序列的第一个值挨个和有序序列的进行比较希尔排序额中是以d为增，d慢慢减小到1，这个过程中不断让每一次排序的所用的比较次数减少。"></a>2.是对插入排序的改进，在插入排序中是以1为增量让有序序列的第一个值挨个和有序序列的进行比较希尔排序额中是以d为增，d慢慢减小到1，这个过程中不断让每一次排序的所用的比较次数减少。</h4><h4 id="3-希尔排序是对直接插入排序的一种优化，可以用于大型的数组，希尔排序比插入排序和选择排序要快的多，并且数组越大，优势越大。"><a href="#3-希尔排序是对直接插入排序的一种优化，可以用于大型的数组，希尔排序比插入排序和选择排序要快的多，并且数组越大，优势越大。" class="headerlink" title="3.希尔排序是对直接插入排序的一种优化，可以用于大型的数组，希尔排序比插入排序和选择排序要快的多，并且数组越大，优势越大。"></a>3.希尔排序是对直接插入排序的一种优化，可以用于大型的数组，希尔排序比插入排序和选择排序要快的多，并且数组越大，优势越大。</h4><h4 id="4-时间复杂度-：O-n1-3"><a href="#4-时间复杂度-：O-n1-3" class="headerlink" title="4.时间复杂度 ：O(n1.3)"></a>4.时间复杂度 ：O(n<sup>1.3</sup>)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">void HillSort(int r[],int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(int d=n/2 ; d&gt;=1; d=d/2)   //以d位增量来插入</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        for(i=d+1;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            r[0]=r[i];</span><br><span class="line">            for(j=i-d;j&gt;0&amp;&amp;r[0]&lt;r[j];j-=d)</span><br><span class="line">            &#123;</span><br><span class="line">                r[j+d]=r[j];</span><br><span class="line">            &#125;</span><br><span class="line">            r[j+d]=r[0];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line"></span><br><span class="line"> int a[11] = &#123;0,4,1,5,6,3,2,8,7,9,10&#125;;</span><br><span class="line">    HillSort(a,11);</span><br><span class="line">    for(int i =1 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/06/11/5cfeffef648f129548.png" alt></p><h3 id="三、冒泡排序（双向排序）-双向冒泡排序"><a href="#三、冒泡排序（双向排序）-双向冒泡排序" class="headerlink" title="三、冒泡排序（双向排序）+ 双向冒泡排序"></a>三、冒泡排序（双向排序）+ 双向冒泡排序</h3><blockquote><p>冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。<br>它重复地走访过要排序的元素列，依次比较两个相邻的元素，如果他们的顺序（如从大到小、首字母从A到Z）错误就把他们交换过来。走访元素的工作是重复地进行直到没有相邻元素需要交换，也就是说该元素列已经排序完成。<br>这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。</p></blockquote><h4 id="冒泡排序算法的原理如下："><a href="#冒泡排序算法的原理如下：" class="headerlink" title="冒泡排序算法的原理如下："></a>冒泡排序算法的原理如下：</h4><h4 id="1-比较相邻的元素。如果第一个比第二个大，就交换他们两个。"><a href="#1-比较相邻的元素。如果第一个比第二个大，就交换他们两个。" class="headerlink" title="1.比较相邻的元素。如果第一个比第二个大，就交换他们两个。"></a>1.比较相邻的元素。如果第一个比第二个大，就交换他们两个。</h4><h4 id="2-对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。"><a href="#2-对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。" class="headerlink" title="2.对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。"></a>2.对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</h4><h4 id="3-针对所有的元素重复以上的步骤，除了最后一个。"><a href="#3-针对所有的元素重复以上的步骤，除了最后一个。" class="headerlink" title="3.针对所有的元素重复以上的步骤，除了最后一个。"></a>3.针对所有的元素重复以上的步骤，除了最后一个。</h4><h4 id="4-持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。"><a href="#4-持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。" class="headerlink" title="4.持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。"></a>4.持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</h4><h4 id="3-时间复杂度O-n²"><a href="#3-时间复杂度O-n²" class="headerlink" title="3.时间复杂度O(n²)"></a>3.时间复杂度O(n²)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">void BubbleSort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line">    int bound;</span><br><span class="line">    int exchange = n;  //有序序列第一个值为最后一个值</span><br><span class="line">    while(exchange!=0)</span><br><span class="line">    &#123;</span><br><span class="line">       bound =  exchange ;   //有序序列第一个值</span><br><span class="line">       exchange  = 0;     //exchange=0 如果下面的循环中的判断成立，也就是无序序列确实是无序，则while循环继续。</span><br><span class="line">       for(int i =0 ;i&lt;bound;i++)</span><br><span class="line">       &#123;</span><br><span class="line"></span><br><span class="line">           if(a[i]&gt;a[i+1])</span><br><span class="line">           &#123;</span><br><span class="line">               int temp = a[i];</span><br><span class="line">               a[i] = a[i+1];</span><br><span class="line">               a[i+1] = temp;</span><br><span class="line">               exchange = i ;  //for循环截至是，exchange就是有序序列的第一个值</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void DoubleBubbleSort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line">  int low = 0,high;</span><br><span class="line">  high =n-1;</span><br><span class="line">  int lastPos;</span><br><span class="line">  while(low&lt;high)</span><br><span class="line">  &#123;</span><br><span class="line">       lastPos = high;</span><br><span class="line">       for(int i=low;i&lt;lastPos;i++)</span><br><span class="line">       &#123;</span><br><span class="line">           if(a[i]&gt;a[i+1])</span><br><span class="line">           &#123;</span><br><span class="line">               int  temp = a[i];</span><br><span class="line">               a[i]= a[i+1];</span><br><span class="line">               a[i+1] = temp;</span><br><span class="line">               high = i;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       if(high==lastPos)  //没有交换位置</span><br><span class="line">       &#123;</span><br><span class="line">           break;</span><br><span class="line">       &#125;</span><br><span class="line">       lastPos = low;</span><br><span class="line">       for(int i=high-1;i&gt;lastPos;i--)</span><br><span class="line">       &#123;</span><br><span class="line">           if(a[i]&gt;a[i+1])</span><br><span class="line">           &#123;</span><br><span class="line">               int  temp = a[i];</span><br><span class="line">               a[i]= a[i+1];</span><br><span class="line">               a[i+1] = temp;</span><br><span class="line">               low = i;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">        if(low==lastPos)  //没有交换位置</span><br><span class="line">       &#123;</span><br><span class="line">           break;</span><br><span class="line">       &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line"></span><br><span class="line">    int a[11] = &#123;0,1,4,5,6,3,2,8,7,9,10&#125;;</span><br><span class="line">    BubbleSort(a,11);</span><br><span class="line">    cout&lt;&lt;&quot;冒泡排序: &quot;;</span><br><span class="line">    for(int i =0 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">     int b[11] = &#123;0,1,4,5,6,3,2,8,10,7,9&#125;;</span><br><span class="line">     DoubleBubbleSort(b,11);</span><br><span class="line">     cout&lt;&lt;&quot;双向冒泡排序：&quot;;</span><br><span class="line">      for(int i =0 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;b[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/06/11/5cff018c3521a47453.png" alt></p><h3 id="四、快速排序"><a href="#四、快速排序" class="headerlink" title="四、快速排序"></a>四、快速排序</h3><blockquote><p>快速排序（Quicksort）是对冒泡排序的一种改进。<br>快速排序由C. A. R. Hoare在1960年提出。它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p></blockquote><h4 id="1-时间性能：O-N-log2N"><a href="#1-时间性能：O-N-log2N" class="headerlink" title="1.时间性能：O(N*log2N)"></a>1.时间性能：O(N*log<sub>2</sub>N)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">// Partition一次排序，每一次都找到一个轴值</span><br><span class="line">int Partition(int a[],int f,int e)</span><br><span class="line">&#123;</span><br><span class="line">    int i = f ,j=e;</span><br><span class="line">    while(i&lt;j)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        while(i&lt;j&amp;&amp;a[i]&lt;=a[j])j--;</span><br><span class="line">        if(i&lt;j)&#123;</span><br><span class="line">            int temp = a[i];</span><br><span class="line">            a[i]=a[j];</span><br><span class="line">            a[j] =temp;</span><br><span class="line">            i++;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         while(i&lt;j&amp;&amp;a[i]&lt;=a[j])i++;</span><br><span class="line">          if(i&lt;j)&#123;</span><br><span class="line">            int temp = a[i];</span><br><span class="line">            a[i]=a[j];</span><br><span class="line">            a[j] =temp;</span><br><span class="line">            j--;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        for(int i =0 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;&quot;轴值：&quot;&lt;&lt;i&lt;&lt;&quot;;  &quot;;</span><br><span class="line">      for(int i =0 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">        return i;</span><br><span class="line">&#125;</span><br><span class="line">//挨个找轴值，找到序列长度为1的轴值，排序就结束了</span><br><span class="line">void QuickSort(int a[],int f,int e)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    if(f&lt;e)</span><br><span class="line">    &#123;</span><br><span class="line">       int p = Partition(a,f,e);</span><br><span class="line">        QuickSort(a,f,p-1);</span><br><span class="line">    QuickSort(a,p+1,e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line"></span><br><span class="line">int a[11] = &#123;0,4,1,5,6,3,2,8,7,9,10&#125;;</span><br><span class="line">    QuickSort(a,0,11);</span><br><span class="line">    for(int i =0 ;i &lt; 11;i++)</span><br><span class="line">    cout&lt;&lt;a[i]&lt;&lt;&quot;  &quot;;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/06/11/5cff06c07b8ba43218.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、插入排序&quot;&gt;&lt;a href=&quot;#一、插入排序&quot; class=&quot;headerlink&quot; title=&quot;一、插入排序&quot;&gt;&lt;/a&gt;一、插入排序&lt;/h3&gt;&lt;h4 id=&quot;1-是一种简单直观且稳定的排序算法。&quot;&gt;&lt;a href=&quot;#1-是一种简单直观且稳定的排序算法。&quot;
      
    
    </summary>
    
      <category term="数据结构" scheme="www.yqxblog.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="www.yqxblog.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Unity-储存游戏数据的方式</title>
    <link href="www.yqxblog.top/unity/Unity-%E5%82%A8%E5%AD%98%E6%B8%B8%E6%88%8F%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>www.yqxblog.top/unity/Unity-储存游戏数据的方式/</id>
    <published>2019-06-11T00:13:00.000Z</published>
    <updated>2019-06-11T00:40:03.663Z</updated>
    
    <content type="html"><![CDATA[ Unity 储存游戏数据的方式<a id="more"></a><h3 id="一、本地化txt文件"><a href="#一、本地化txt文件" class="headerlink" title="一、本地化txt文件"></a>一、本地化txt文件</h3><h4 id="在本地的Application-path路径中："><a href="#在本地的Application-path路径中：" class="headerlink" title="在本地的Application.path路径中："></a>在本地的Application.path路径中：</h4><p>1.Application.persistentDataPath 持久数据路径,APP更新时不会删除此数据<br>2.Application.dataPath 数据路径(Assets目录)  例：E:/Work/cosmosbox/cb-client/<br>3.AssetsApplication.streamingAssetsPath (Assets/StreamingAssets目录),AssetBundle一般存放在此目录下,可以通过www读取<br>4.Application.temporaryCachePath 操作系统的临时缓存目录 ，例： Z:/TEMP/Cosmosbox/ [我的电脑把缓存文件设置在Z盘]</p><h4 id="io流输入输出用C-的-TODO-补充C-io流"><a href="#io流输入输出用C-的-TODO-补充C-io流" class="headerlink" title="io流输入输出用C#的 //TODO 补充C#io流"></a>io流输入输出用C#的 //TODO 补充C#io流</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">String filename;</span><br><span class="line">String path;</span><br><span class="line">if (!File.Exists(path+filename))</span><br><span class="line">&#123;</span><br><span class="line">   Directory.CreateDirectory(path);    //创建一个文件夹</span><br><span class="line">   FIleStream fsl = new FileStream(path+filename, FileMode.Create, FileAccess.Write);  //创建一个可读写的文件</span><br><span class="line">&#125;</span><br><span class="line">//1.读操作</span><br><span class="line">StreamReader sw = new StreamReader(path+filename);</span><br><span class="line">String str = sw.ReadLine();</span><br><span class="line">sw.close();</span><br><span class="line">//2.写操作</span><br><span class="line">StreamWriter sw = new StreamWriter(path+filename);</span><br><span class="line">sw.WriteLine(str);</span><br><span class="line">sw.close();</span><br></pre></td></tr></table></figure><h3 id="二、放到-PlayerPrefs-中"><a href="#二、放到-PlayerPrefs-中" class="headerlink" title="二、放到 PlayerPrefs 中"></a>二、放到 PlayerPrefs 中</h3><p>1、Unity3D中的数据持久化是以键值的形式存储的，可以看作是一个字典。<br>2、Unity3D中值是通过键名来读取的，当值不存在时，返回默认值。<br>在Unity3D中只支持int、string、float三种数据类型的读取.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SetInt(key);SetFloat(key);SetString(key);</span><br><span class="line">GetInt(key);GetFloat(key);GetString(key);</span><br><span class="line">DelteAll();</span><br><span class="line">DeletKey(key);</span><br><span class="line">HasKey(key);</span><br></pre></td></tr></table></figure></p><p>持久化，一般是放不变的数据</p><h3 id="三、Json-数据加密"><a href="#三、Json-数据加密" class="headerlink" title="三、Json+数据加密"></a>三、Json+数据加密</h3><h4 id="1-Json"><a href="#1-Json" class="headerlink" title="1.Json"></a>1.Json</h4><h5 id="（1-Unity自带的Unity"><a href="#（1-Unity自带的Unity" class="headerlink" title="（1). Unity自带的Unity"></a>（1). Unity自带的Unity</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">calss Student&#123;&#125;</span><br><span class="line">Student m;</span><br><span class="line">JsonUtility.ToJson(m);</span><br><span class="line">String str;  //Json字符串</span><br><span class="line">(Student)JsonUtility.FromJson&lt;Student&gt;(str);</span><br></pre></td></tr></table></figure><h5 id="2-SimpleJson"><a href="#2-SimpleJson" class="headerlink" title="(2).SimpleJson"></a>(2).SimpleJson</h5><p><a href>点我</a></p>]]></content>
    
    <summary type="html">
    
      Unity 储存游戏数据的方式
    
    </summary>
    
      <category term="unity" scheme="www.yqxblog.top/categories/unity/"/>
    
    
      <category term="unity" scheme="www.yqxblog.top/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>unity canvas</title>
    <link href="www.yqxblog.top/unity/unity_canvas/"/>
    <id>www.yqxblog.top/unity/unity_canvas/</id>
    <published>2019-06-10T12:56:00.000Z</published>
    <updated>2019-06-11T00:13:32.538Z</updated>
    
    <content type="html"><![CDATA[ Canvas<a id="more"></a><h2 id="画布（Canvas）"><a href="#画布（Canvas）" class="headerlink" title="画布（Canvas）"></a>画布（Canvas）</h2><p>　Canvas画布是承载所有UI元素的区域。Canvas实际上是一个游戏对象上绑定了Canvas组件。所有的UI元素都必须是Canvas的自对象。如果场景中没有画布，那么我们创建任何一个UI元素，都会自动创建画布，并且将新元素置于其下。</p><h3 id="一、渲染模式"><a href="#一、渲染模式" class="headerlink" title="一、渲染模式"></a>一、渲染模式</h3><h4 id="1-Screen-Space-Overlay模式"><a href="#1-Screen-Space-Overlay模式" class="headerlink" title="1.Screen Space-Overlay模式"></a>1.Screen Space-Overlay模式</h4><p> Screen Space-Overlay（屏幕控件-覆盖模式）的画布会填满整个屏幕空间，并将画布下面的所有的UI元素置于屏幕的最上层，或者说画布的画面永远“覆盖”其他普通的3D画面，如果屏幕尺寸被改变，画布将自动改变尺寸来匹配屏幕。<br>Screen Space-Overlay模式的画布有Pixel Perfect和Sort Layer两个参数：<br>　　（1）Pixel Perfect：只有RenderMode为Screen类型时才有的选项。使UI元素像素对应，效果就是边缘清晰不模糊。<br>　　（2）Sort Layer: Sort Layer是UGUI专用的设置，用来指示画布的深度。</p><h4 id="2-Screen-Space-Camera"><a href="#2-Screen-Space-Camera" class="headerlink" title="2.Screen Space-Camera"></a>2.Screen Space-Camera</h4><p> （屏幕空间-摄影机模式）和Screen Space-Overlay模式类似，画布也是填满整个屏幕空间，如果屏幕尺寸改变，画布也会自动改变尺寸来匹配屏幕。所不同的是，在该模式下，画布会被放置到摄影机前方。在这种渲染模式下，画布看起来 绘制在一个与摄影机固定距离的平面上。所有的UI元素都由该摄影机渲染，因此摄影机的设置会影响到UI画面。在此模式下，UI元素是由perspective也就是视角设定的，视角广度由Filed of View设置。</p><p>　　这种模式可以用来实现在UI上显示3D模型的需求，比如很多MMO游戏中的查看人物装备的界面，可能屏幕的左侧有一个运动的3D人物，左侧是一些UI元素。通过设置Screen Space-Camera模式就可以实现上述的需求。<br>  　它比Screen Space-Overlay模式的画布多了下面几个参数：</p><p>　　（1）Render Camera:渲染摄像机</p><p>　　（2）Plane Distance:画布距离摄像机的距离</p><p>　　（3）Sorting Layer: Sorting Layer是UGUI专用的设置，用来指示画布的深度。可以通过点击该栏的选项，在下拉菜单中点击“Add Sorting Layer”按钮进入标签和层的设置界面，或者点击导航菜单-&gt;edit-&gt;Project Settings-&gt;Tags and Layers进入该页面。</p><p>　　　　可以点击“+”添加Layer，或者点击“-”删除Layer。画布所使用的Sorting Layer越排在下面，显示的优先级也就越高。</p><p>　　（4）Order in Layer:在相同的Sort Layer下的画布显示先后顺序。数字越高，显示的优先级也就越高。</p><h4 id="3-World-Space"><a href="#3-World-Space" class="headerlink" title="3.World Space"></a>3.World Space</h4><p> World Space即世界控件模式。在此模式下，画布被视为与场景中其他普通游戏对象性质相同的类似于一张面片（Plane）的游戏物体。画布的尺寸可以通过RectTransform设置，所有的UI元素可能位于普通3D物体的前面或者后面显示。当UI为场景的一部分时， 　　可以使用这个模式。</p><p>　　它有一个单独的参数Event Camera，用来指定接受事件的摄像机，可以通过画布上的GraphicRaycaster组件发射射线产生事件。</p><p>　　这种模式可以用来实现跟随人物移动的血条或者名称。<br>  我们通过下面的表格可以对比一下三种渲染模式的区别：<br><img src="https://i.loli.net/2019/06/11/5cfef0be64b0891326.png" alt></p><h3 id="TODO-Screen-Match-mode"><a href="#TODO-Screen-Match-mode" class="headerlink" title="//TODO Screen Match mode"></a>//TODO Screen Match mode</h3>]]></content>
    
    <summary type="html">
    
      Canvas
    
    </summary>
    
      <category term="unity" scheme="www.yqxblog.top/categories/unity/"/>
    
    
      <category term="unity" scheme="www.yqxblog.top/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Oracle--上机实验2</title>
    <link href="www.yqxblog.top/Oracle/oracle%E5%AE%9E%E9%AA%8C2/"/>
    <id>www.yqxblog.top/Oracle/oracle实验2/</id>
    <published>2019-06-05T15:24:17.075Z</published>
    <updated>2019-06-05T15:26:48.699Z</updated>
    
    <content type="html"><![CDATA[程序块，程序包 <a id="more"></a> <escape>第一步：建表：<escape><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">drop table emp;</span><br><span class="line">drop table dept;</span><br><span class="line">create table dept(</span><br><span class="line">       deptno number(10) primary key,</span><br><span class="line">       dname varchar2(30),</span><br><span class="line">       loc varchar2(30)</span><br><span class="line">)</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">       empno number(10) primary key,</span><br><span class="line">       ename varchar2(30),</span><br><span class="line">       job varchar2(30),</span><br><span class="line">       mgr varchar2(30),</span><br><span class="line">       hiredate number(10),</span><br><span class="line">       sal number(10),</span><br><span class="line">       comm number(10),</span><br><span class="line">       deptno number(10),</span><br><span class="line">       foreign key(deptno) references dept(deptno)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>第二步：向各表中插入数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">insert into dept values(1, &apos;技术部&apos; ,&apos;南泥湾&apos;);</span><br><span class="line">insert into dept values(2, &apos;SALES&apos; ,&apos;深圳市&apos;);</span><br><span class="line">insert into dept values(3, &apos;事业部&apos; ,&apos;北京市&apos;);</span><br><span class="line">insert into dept values(4, &apos;服务部&apos; ,&apos;延安&apos;);</span><br><span class="line">insert into dept values(5, &apos;生产部&apos; ,&apos;南京市&apos;);</span><br><span class="line">insert into dept values(6, &apos;宣传部&apos; ,&apos;上海市&apos;);</span><br><span class="line">insert into dept values(7, &apos;打杂部&apos; ,&apos;广州市&apos;);</span><br><span class="line">insert into dept values(8, &apos;司令部&apos; ,&apos;重庆市&apos;);</span><br><span class="line">insert into dept values(9, &apos;卫生部&apos; ,&apos;长沙市&apos;);</span><br><span class="line">insert into dept values(10, &apos;文化部&apos; ,&apos;武冈市&apos;);</span><br><span class="line">insert into dept values(11, &apos;娱乐部&apos; ,&apos;纽约&apos;);</span><br><span class="line">insert into dept values(12, &apos;管理部&apos; ,&apos;伦敦&apos;);</span><br><span class="line">insert into dept values(13, &apos;行政部&apos; ,&apos;天津市&apos;);</span><br><span class="line">select * from dept;</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">insert into emp values(1, &apos;关羽羽&apos;, &apos;CLERK&apos; ,&apos;刘备备&apos;, 20011109, 2000, 1000, 3);</span><br><span class="line">insert into emp values(2, &apos;SMITH&apos;, &apos;CLERK&apos; ,&apos;刘备备&apos;, 20120101, 2000, 800, 6);</span><br><span class="line">insert into emp values(3, &apos;刘备备&apos;, &apos;MANAGER&apos; ,&apos;宋祖英&apos;, 20080808, 9000, 4000, 3);</span><br><span class="line">insert into emp values(4, &apos;TOM&apos;, &apos;ENGINEER&apos; ,&apos;Steve&apos;, 20050612, 3000, 1000, 1);</span><br><span class="line">insert into emp values(5, &apos;Steve&apos;, &apos;MANAGER&apos; ,&apos;宋祖英&apos;, 20110323, 80000, 9000, 1);</span><br><span class="line">insert into emp values(6, &apos;张飞飞&apos;, &apos;CLERK&apos; ,&apos;刘备备&apos;, 20101010, 2000, 1000, 3);</span><br><span class="line">insert into emp values(7, &apos;SCOTT&apos;, &apos;CLERK&apos; ,&apos;刘备备&apos;, 20071204, 2000, 1000, 3);</span><br><span class="line">insert into emp values(8, &apos;宋祖英&apos;, &apos;Boss&apos; ,&apos;无&apos;, 20060603, 2000, 1000, 8);</span><br><span class="line">insert into emp values(9, &apos;曹仁人&apos;, &apos;SALESMAN&apos; ,&apos;曹操操&apos;, 20120130, 2000, 1000, 2);</span><br><span class="line">insert into emp values(10, &apos;曹操操&apos;, &apos;MANAGER&apos; ,&apos;宋祖英&apos;,20090815, 2000, 1000, 2);</span><br><span class="line">insert into emp values(11, &apos;酱油哥&apos;, &apos;HAPI&apos; ,&apos;XXX&apos;,20090215, 3, 1, 2);</span><br></pre></td></tr></table></figure><p>游标更新操作 将所有工资位1000以下的变成1500 所有大于1000的乘以1.5 所有大于10000的变成10000<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SET ServerOutput ON;</span><br><span class="line">Declare </span><br><span class="line">  cursor c_1 is </span><br><span class="line">         select empno,sal from emp</span><br><span class="line">         for update of sal nowait;</span><br><span class="line">  v_sal emp.sal%type;</span><br><span class="line">  </span><br><span class="line">Begin</span><br><span class="line">  for v_1 in c_1 </span><br><span class="line">    Loop</span><br><span class="line">      if(v_1.sal&lt;=1000) then v_sal:=1500;</span><br><span class="line">      else </span><br><span class="line">        v_sal :=v_1.sal*1.5;</span><br><span class="line">        if(v_sal&gt;10000)then v_sal := 10000;</span><br><span class="line">      end if;</span><br><span class="line">    end if;</span><br><span class="line">    update emp set sal=v_sal where current of c_1;</span><br><span class="line">    end loop;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure></p><p>程序过程<br>：</p><p>1.简单的procedure<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> select empno,ename from emp;</span><br><span class="line"></span><br><span class="line">SET ServerOutput ON;</span><br><span class="line">create or replace procedure update_emp as</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  update emp set ename=&apos;关羽&apos; where empno =1; </span><br><span class="line">end update_emp;</span><br><span class="line"></span><br><span class="line">Begin </span><br><span class="line">  update_emp();</span><br><span class="line">End;</span><br></pre></td></tr></table></figure></p><p>2.有程序包的procedure<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create or replace package test1 </span><br><span class="line">is</span><br><span class="line">  procedure t1;</span><br><span class="line">  procedure t2;</span><br><span class="line">  function t3 return number;</span><br><span class="line"></span><br><span class="line">end test1;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">create or replace package body test1 </span><br><span class="line"></span><br><span class="line">as</span><br><span class="line">    procedure t1  as </span><br><span class="line">         begin    </span><br><span class="line">          </span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(sysdate);</span><br><span class="line">         end;</span><br><span class="line">    procedure t2 as</span><br><span class="line">      begin</span><br><span class="line">         update emp set ename=&apos;关羽&apos; where empno =1;</span><br><span class="line">         end;</span><br><span class="line">    function t3  return number is</span><br><span class="line">      begin</span><br><span class="line">         return 1;</span><br><span class="line">         end;</span><br><span class="line">         </span><br><span class="line">end test1;</span><br><span class="line">extc test1.t1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SET ServerOutput ON;</span><br><span class="line">Begin </span><br><span class="line">  test1.t1();</span><br><span class="line">End;</span><br><span class="line">SET ServerOutput ON;</span><br><span class="line">Begin </span><br><span class="line">  test1.t2();</span><br><span class="line">End;</span><br><span class="line">SET ServerOutput ON;</span><br><span class="line">Begin </span><br><span class="line">  test1.t3();</span><br><span class="line">End;</span><br></pre></td></tr></table></figure><p>select avg(sal),count(*) from emp;</p><p>1.程序块 找出deptno=？ 的平均工资和人数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure return_deptinfo</span><br><span class="line">(</span><br><span class="line"> p_deptno in emp.deptno%type,</span><br><span class="line"> p_avgsal out emp.sal%type,</span><br><span class="line"> p_count out emp.sal%type</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">    select avg(sal),count(*)  into p_avgsal,p_count from emp</span><br><span class="line">    where</span><br><span class="line">    deptno = p_deptno ;</span><br><span class="line">end return_deptinfo;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SET ServerOutput ON;</span><br><span class="line">Declare </span><br><span class="line">   p_deptno  emp.deptno%type := 1;</span><br><span class="line">   p_avgsal  emp.sal%type;</span><br><span class="line">   p_count  emp.sal%type;</span><br><span class="line">Begin </span><br><span class="line">  return_deptinfo(p_deptno,p_avgsal,p_count);</span><br><span class="line">   DBMS_OUTPUT.PUT_LINE(p_avgsal||&apos;;&apos;||p_count);</span><br><span class="line">End;</span><br></pre></td></tr></table></figure><p>2.找到no中比平均工资高的员工并显示出来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure show_emp</span><br><span class="line">(</span><br><span class="line"> p_deptno in emp.deptno%type</span><br><span class="line">)</span><br><span class="line">as</span><br><span class="line">v_sal emp.sal%type;</span><br><span class="line">Begin</span><br><span class="line">   select avg(sal) into v_sal from emp where deptno = p_deptno;</span><br><span class="line">   DBMS_OUTPUT.PUT_LINE(p_deptno||&apos;的平均工资：&apos;||v_sal);</span><br><span class="line">   </span><br><span class="line">     DBMS_OUTPUT.PUT_LINE(&apos;P_deptno为&apos;||p_deptno||&apos;中比平均工资高的&apos;);</span><br><span class="line">   for v_emp in(select * from emp where</span><br><span class="line">      deptno=p_deptno AND sal&gt;v_sal )</span><br><span class="line">      Loop</span><br><span class="line">        DBMS_OUTPUT.PUT_LINE(&apos;empno：&apos;||v_emp.empno||&apos;name： &apos;||v_emp.ename);</span><br><span class="line">      end Loop;</span><br><span class="line">end show_emp;</span><br><span class="line">SET ServerOutput ON;</span><br><span class="line">Declare </span><br><span class="line">   p_deptno  emp.deptno%type := 1;</span><br><span class="line">  Begin  </span><br><span class="line">    show_emp(p_deptno);</span><br><span class="line">    End;</span><br></pre></td></tr></table></figure></p></escape></escape>]]></content>
    
    <summary type="html">
    
      程序块，程序包
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle--上机实验1</title>
    <link href="www.yqxblog.top/Oracle/oracle%E5%AE%9E%E9%AA%8C/"/>
    <id>www.yqxblog.top/Oracle/oracle实验/</id>
    <published>2019-06-05T15:23:50.736Z</published>
    <updated>2019-06-05T15:28:46.810Z</updated>
    
    <content type="html"><![CDATA[建表。。。。游标的使用 <a id="more"></a> <escape><escape><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select tablespace_name as 表空间名,SUM(bytes)</span><br><span class="line">from dba_data_files</span><br><span class="line">group by tablespace_name;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table t_stu(  </span><br><span class="line">  stuid      number(10)   primary key not null,  </span><br><span class="line">  stuname    varchar2(20) not null,  </span><br><span class="line">  stusex     varchar2(2)  default &apos;男&apos; check(stusex in(&apos;男&apos;,&apos;女&apos;))</span><br><span class="line">)TABLESPACE T1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table xs(  </span><br><span class="line">   xh      varchar2(26)   primary key not null ,</span><br><span class="line">   xs_name varchar2(20)   not null,</span><br><span class="line">   sex     varchar2(2)    default &apos;男&apos; check(sex in(&apos;男&apos;,&apos;女&apos;))</span><br><span class="line">)TABLESPACE T1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert  into xs(xh,xs_name,sex) values(20171746,&apos;虞启贤&apos;,&apos;男&apos;);</span><br><span class="line">insert  into xs(xh,xs_name,sex) values(20171828,&apos;张雪微&apos;,&apos;女&apos;);</span><br><span class="line">insert  into xs(xh,xs_name,sex) values(20171755,&apos;花解语&apos;,&apos;女&apos;);</span><br><span class="line">insert  into xs(xh,xs_name,sex) values(20171745,&apos;叶伏天&apos;,&apos;男&apos;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add constraint 约束名 约束内容。</span><br><span class="line">for example:</span><br><span class="line">alter table xs add constraint pk primaey key xh;</span><br><span class="line">alter table xs add constraint ck     check(sex==&apos;男&apos;or sex ==&apos;女&apos;);  //and or </span><br><span class="line">alter table xs add constraint un_xh unique(xh); //列值唯一</span><br><span class="line">-增加主键     </span><br><span class="line">alter table 表名 add constraint 主键名 primary key (字段名1);</span><br><span class="line">-增加外键:     </span><br><span class="line">alter table 表名 add constraint 外键名 foreign key (字段名1) references 关联表 (字段名2);</span><br><span class="line">alter table xs move tablespace T2;         //  将xs表从表空间t1转移到t2；</span><br><span class="line">alter table xs modify(sex default &apos;男&apos;) ;  // 修改sex列的默认值</span><br><span class="line">drop table t_stu;                        //删除表</span><br><span class="line"> </span><br><span class="line"> CREATE PUBLIC SYNONYM x FOR xs;  //增加同义词 </span><br><span class="line"> DROP SYNONYM s_dept;</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> 1.修改列的长度  </span><br><span class="line">      alter table dept modify loc varchar2(50);</span><br><span class="line">  </span><br><span class="line">2. 修改列的精度  </span><br><span class="line">      alter table employee_info modify empno number(2);</span><br><span class="line">  </span><br><span class="line">3. 修改列的数据类型  </span><br><span class="line">      alter table employee_info modify sex char(2); </span><br><span class="line"> </span><br><span class="line">4. 修改默认值  </span><br><span class="line">      alter table employee_info modify hiredate default sysdate+1; </span><br><span class="line"> </span><br><span class="line">5.禁用约束  </span><br><span class="line">  alter table employee_info disable constraint uq_emp_info;</span><br><span class="line">  </span><br><span class="line">6.启用约束  </span><br><span class="line">  alter table employee_info enable constraint uq_emp_info;  </span><br><span class="line">7.延迟约束  </span><br><span class="line">  alter table employee_info drop constraint fk_emp_info;  </span><br><span class="line">  alter table employee_info add constraint fk_emp_info foreign key(deptno)  </span><br><span class="line">        references dept(deptno)  </span><br><span class="line">  deferrable initially deferred;  </span><br><span class="line">8.向表中添加注释  </span><br><span class="line">  comment on table employee_info is &apos;information of employees&apos;;</span><br><span class="line">  </span><br><span class="line">9.向列添加注释  </span><br><span class="line">  comment on column employee_info.ename is &apos;the name of employees&apos;;  </span><br><span class="line">  comment on column dept.dname is &apos;the name of department&apos;;  </span><br><span class="line">10.清除表中所有数据  </span><br><span class="line">  truncate table employee_info; (DELETE FROM table_name或DELETE * FROM table_name)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">declare </span><br><span class="line"> var sex :=&apos;男&apos;;</span><br><span class="line"> v_sex xs%rowtype</span><br><span class="line">begin</span><br><span class="line"> select * into x_sex form xs so</span><br><span class="line"> where so.sex=sex;</span><br></pre></td></tr></table></figure><p>游标的使用：<br>游标的属性   返回值类型   意    义<br>%ROWCOUNT   整型  获得FETCH语句返回的数据行数<br>%FOUND  布尔型 最近的FETCH语句返回一行数据则为真，否则为假<br>%NOTFOUND   布尔型 与%FOUND属性返回值相反<br>%ISOPEN 布尔型 游标已经打开时值为真，否则为假<br>简单使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DECLARE </span><br><span class="line">  v_xh NUMBER;</span><br><span class="line">  v_name VARCHAR2(26);</span><br><span class="line">  Cursor Mycur IS</span><br><span class="line">  Select xh,xs_name from xs </span><br><span class="line">  where xh=20171746</span><br><span class="line">  ;</span><br><span class="line">Begin </span><br><span class="line">   </span><br><span class="line">   open Mycur ;</span><br><span class="line">   Fetch Mycur into v_xh,v_name ; </span><br><span class="line">   close Mycur;</span><br><span class="line">   </span><br><span class="line">   dbms_output.put_line(&apos;学生学号：&apos;||v_xh||&apos; 学生姓名:&apos;||v_name||&apos; 已执行的数据行数：&apos;);</span><br><span class="line">   </span><br><span class="line">End;</span><br></pre></td></tr></table></figure></p><p>1.隐式使用游标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Begin</span><br><span class="line">  Update xs set sex=&apos;女&apos; where sex = &apos;男&apos;;</span><br><span class="line">  IF SQL%FOUND THEN</span><br><span class="line">    DBMS_OUTPUT.put_line(&apos;成功将男性De改为女性&apos;);</span><br><span class="line">    COMMIT;</span><br><span class="line">    ELSE</span><br><span class="line">     DBMS_OUTPUT.put_line(&apos;UPDATE 失败&apos;); </span><br><span class="line">     END IF;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">Update xs set sex=&apos;男&apos; where xh=20171746;</span><br><span class="line">SET serveroutput on;</span><br></pre></td></tr></table></figure></p><p>2.用rowtype+游标 提取是男性的学生<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Declare</span><br><span class="line">     Cursor v_cursor IS</span><br><span class="line">     select * from xs s where s.sex = &apos;男&apos;;</span><br><span class="line">     v_xs v_cursor%ROWTYPE;  </span><br><span class="line">Begin</span><br><span class="line">     IF v_cursor%ISOPEN=false Then</span><br><span class="line">       open v_cursor;</span><br><span class="line">      END IF;</span><br><span class="line">      </span><br><span class="line">      Fetch  v_cursor into v_xs ;</span><br><span class="line">      </span><br><span class="line">      While v_cursor%Found</span><br><span class="line">        LOOP</span><br><span class="line">           DBMS_OUTPUT.PUT_LINE(&apos;学号：&apos;||v_xs.xh||&apos; 姓名：&apos;||v_xs.xs_name||&apos; 性别：&apos;||v_xs.sex); </span><br><span class="line">           DBMS_OUTPUT.PUT_LINE(&apos;已执行行数:&apos;||v_cursor%rowcount);</span><br><span class="line">            Fetch  v_cursor into v_xs ;</span><br><span class="line">        End LOOP;</span><br><span class="line">        </span><br><span class="line">        CLOSE v_cursor;  </span><br><span class="line">END;</span><br></pre></td></tr></table></figure></p><p>3.显示学号大小前三的学生<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Declare </span><br><span class="line">    Cursor v_c IS</span><br><span class="line">     select * from xs order BY xh DESC;</span><br><span class="line">    v_xs v_c%rowtype;</span><br><span class="line">   </span><br><span class="line">BEGIN</span><br><span class="line">  open v_c;</span><br><span class="line">  </span><br><span class="line">    FOR I in 1..3 LOOP</span><br><span class="line">      Fetch v_c into v_xs;</span><br><span class="line">      dbms_output.put_line(&apos;学号：&apos;||v_xs.xh||&apos; 姓名：&apos;||v_xs.xs_name||&apos; 性别：&apos;||v_xs.sex);</span><br><span class="line">         END LOOP;</span><br><span class="line">         </span><br><span class="line">  close v_c;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure></p><p>4.特殊的FOR循环形式<br>(1).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Declare </span><br><span class="line">    Cursor v_c IS</span><br><span class="line">     select * from xs order BY xh DESC;</span><br><span class="line">BEGIN</span><br><span class="line">  FOR v_xs in v_c LOOP</span><br><span class="line">    dbms_output.put_line(&apos;学号：&apos;||v_xs.xh||&apos; 姓名：&apos;||v_xs.xs_name||&apos; 性别：&apos;||v_xs.sex);</span><br><span class="line">   END LOOP;</span><br><span class="line">  ENd;</span><br></pre></td></tr></table></figure></p><p>(2).<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line">  FOR v_xs in (select * from xs order BY xh DESC) LOOP</span><br><span class="line">    dbms_output.put_line(&apos;学号：&apos;||v_xs.xh||&apos; 姓名：&apos;||v_xs.xs_name||&apos; 性别：&apos;||v_xs.sex);</span><br><span class="line">   END LOOP;</span><br><span class="line">  ENd;</span><br></pre></td></tr></table></figure></p><p>5.带参数的游标。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Declare</span><br><span class="line">     Cursor v_c(x_xh Number) IS</span><br><span class="line">     select * from xs where xh=x_xh ;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     v_xs v_c%rowtype;</span><br><span class="line">     </span><br><span class="line">BEgin</span><br><span class="line">     open v_c(20171755);</span><br><span class="line">     Fetch v_c into v_xs;</span><br><span class="line">     dbms_output.put_line(&apos;学号：&apos;||v_xs.xh||&apos; 姓名：&apos;||v_xs.xs_name||&apos; 性别：&apos;||v_xs.sex);</span><br><span class="line">     close v_c;</span><br><span class="line">End;</span><br></pre></td></tr></table></figure></p><p>6.游标变量的使用<br>(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SET ServerOutput ON;</span><br><span class="line">Declare</span><br><span class="line">Type cursor_type is ref cursor;</span><br><span class="line">c_1 cursor_type;</span><br><span class="line">r_1 xs%rowtype;</span><br><span class="line"></span><br><span class="line">Begin</span><br><span class="line">  open c_1 For select * from xs where xs.xh=&apos;20171746&apos;;</span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(&apos;已执行行数:&apos;||c_1%rowcount);</span><br><span class="line">  while c_1%found Loop</span><br><span class="line">    fetch c_1 into r_1;</span><br><span class="line">        DBMS_OUTPUT.PUT_LINE(&apos;已执行行数:&apos;||c_1%rowcount);</span><br><span class="line">       dbms_output.put_line(&apos;学号：&apos;||r_1.xh||&apos; 姓名：&apos;||r_1.xs_name||&apos; 性别：&apos;||r_1.sex);</span><br><span class="line">end loop;</span><br><span class="line">close c_1;</span><br><span class="line">End;</span><br></pre></td></tr></table></figure></p><p>(2)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SET ServerOutput ON;</span><br><span class="line">Declare</span><br><span class="line">Type cursor_type is ref cursor return xs%rowtype;</span><br><span class="line">c_1 cursor_type;</span><br><span class="line">r_1 xs%rowtype;</span><br><span class="line"></span><br><span class="line">Begin</span><br><span class="line">  open c_1 For select * from xs;</span><br><span class="line">    DBMS_OUTPUT.PUT_LINE(&apos;已执行行数:&apos;||c_1%rowcount);</span><br><span class="line">For i in c_1 Loop</span><br><span class="line">   dbms_output.put_line(&apos;学号：&apos;||i.xh||&apos; 姓名：&apos;||i.xs_name||&apos; 性别：&apos;||i.sex);</span><br><span class="line">End Loop;</span><br><span class="line"></span><br><span class="line">close c_1;</span><br><span class="line">End;</span><br></pre></td></tr></table></figure></p><p>(3)</p></escape></escape>]]></content>
    
    <summary type="html">
    
      建表。。。。游标的使用
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle--4</title>
    <link href="www.yqxblog.top/Oracle/Oracle---4/"/>
    <id>www.yqxblog.top/Oracle/Oracle---4/</id>
    <published>2019-05-30T09:57:15.165Z</published>
    <updated>2019-06-05T15:22:32.369Z</updated>
    
    <content type="html"><![CDATA[ <a id="more"></a> <escape># 一、数据库安全管理### 1、Oracle认证方法 操作系统认证：在cmd下sqlplus / ，则不要要用户名和密码了。 还有网络认证和数据库认证 数据库管理员认证 connect as /sysdba   忘记DBA口令是简单修改口令的方法 <escape><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlplus as/sysdba</span><br><span class="line">alter user sus identified by NEWPWD;</span><br><span class="line">commit;</span><br><span class="line">conn sys /as sysdba</span><br></pre></td></tr></table></figure><h3 id="2-用户管理"><a href="#2-用户管理" class="headerlink" title="2.用户管理"></a>2.用户管理</h3><h4 id="（1）-创建用户"><a href="#（1）-创建用户" class="headerlink" title="（1）.创建用户"></a>（1）.创建用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create user 用户名</span><br><span class="line">identified by 口令</span><br><span class="line">default tablespace 默认表空间</span><br><span class="line">temporary tablespace 临时表空间</span><br></pre></td></tr></table></figure><h4 id="（2）-修改用户"><a href="#（2）-修改用户" class="headerlink" title="（2）.修改用户"></a>（2）.修改用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user 用户名 identified by NEWPWD  //修改密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user 用户名 password expire/lock/unlock //设置用户密码过期/锁定/解锁</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user 用户名 quata 表空间配额大小 on 表空间//位用户分配表空间配额</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user 用户名  //删除用户</span><br></pre></td></tr></table></figure><h3 id="3-角色管理"><a href="#3-角色管理" class="headerlink" title="3.角色管理"></a>3.角色管理</h3><blockquote><p>查看角色 select * from dba_roles;</p></blockquote><h4 id="1-创建角色"><a href="#1-创建角色" class="headerlink" title="(1).创建角色"></a>(1).创建角色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create role rolename identified by newwpd;</span><br></pre></td></tr></table></figure><h4 id="（2）-指定用户角色"><a href="#（2）-指定用户角色" class="headerlink" title="（2）.指定用户角色"></a>（2）.指定用户角色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant role to user;   //指定角色</span><br><span class="line">example:  grant connect to userman;</span><br><span class="line">revoke role from user //回收角色</span><br></pre></td></tr></table></figure><h4 id="（3）-修改角色"><a href="#（3）-修改角色" class="headerlink" title="（3）.修改角色"></a>（3）.修改角色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter role rolename not identified //取消rolename角色的密码验证</span><br><span class="line">drop role rolename //删除rolename角色</span><br></pre></td></tr></table></figure><h3 id="4-权限管理"><a href="#4-权限管理" class="headerlink" title="4.权限管理"></a>4.权限管理</h3></escape></escape>]]></content>
    
    <summary type="html">
    
      
      
         &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; &lt;escape&gt;
# 一、数据库安全管理

### 1、Oracle认证方法
 操作系统认证：在cmd下sqlplus / ，则不要要用户名和密码了。
 还有网络认证和数据库认证
 数据库管理员认证
 connect as /sysdba
 
      
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 语法的几个简单使用</title>
    <link href="www.yqxblog.top/normal/Markdown%E8%AF%AD%E6%B3%95%E7%9A%84%E5%87%A0%E4%B8%AA%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>www.yqxblog.top/normal/Markdown语法的几个简单使用/</id>
    <published>2019-05-30T07:44:00.000Z</published>
    <updated>2019-06-11T01:03:52.741Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题-几个-号就是几个标题"><a href="#六级标题-几个-号就是几个标题" class="headerlink" title="六级标题 (几个#号就是几个标题)"></a>六级标题 (几个#号就是几个标题)</h6><hr><ul><li>sdsd</li><li>sdsd</li><li>sdsd  (-)</li></ul><p>1.ss<br>2.22<br>3.33</p><p><a href="www.baidu.com">baidu</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([]())</span><br></pre></td></tr></table></figure></p><blockquote><p>sdsdsdsda<br>sdsadsadasd  (&gt;)</p></blockquote><p><em>sddsd</em></p><p><strong>sdsdsd</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><table><thead><tr><th>dog</th><th>bird</th><th>cat</th></tr></thead><tbody><tr><td>foo</td><td>foo</td><td>foo</td></tr><tr><td>bar</td><td>bar</td><td>bar</td></tr><tr><td>baz</td><td>baz</td><td>baz</td></tr></tbody></table><p>![][1]<br>[1]: <a href="http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1" target="_blank" rel="noopener">http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1</a></p><h3 id="在MarkDown中打出上标、下标、及一些特殊符号"><a href="#在MarkDown中打出上标、下标、及一些特殊符号" class="headerlink" title="在MarkDown中打出上标、下标、及一些特殊符号"></a>在MarkDown中打出上标、下标、及一些特殊符号</h3><p><a href="https://www.jianshu.com/p/80ac23666a98" target="_blank" rel="noopener">链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Oracle---3</title>
    <link href="www.yqxblog.top/Oracle/Oracle---3/"/>
    <id>www.yqxblog.top/Oracle/Oracle---3/</id>
    <published>2019-05-25T12:40:00.000Z</published>
    <updated>2019-05-30T09:56:43.712Z</updated>
    
    <content type="html"><![CDATA[回滚段的管理、数据库文件管理（控制文件，重做日志文件，归档文件） <a id="more"></a><h2 id="一、回滚段的管理"><a href="#一、回滚段的管理" class="headerlink" title="一、回滚段的管理"></a>一、回滚段的管理</h2><p>1.查看回滚段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">COL 回滚段名 FOR A20</span><br><span class="line">SELECT</span><br><span class="line">SEGMENT_NAME 回滚段名 , TABLESPACE_NAME 所在表空间，BYTES 大小</span><br><span class="line">FROM DBA_SEGMENTS WHERE SEGMENT_TYPE=&apos;ROLLBACK&apos;;</span><br></pre></td></tr></table></figure><br><img src="https://i.loli.net/2019/05/25/5ce8ed98a941589164.png" alt></p><p>还可以使用视图 V$ROLLNAME 和视图 V$ROLLSTAT<br><img src="https://i.loli.net/2019/05/25/5ce8ee84c4d0230376.png" alt><br><img src="https://i.loli.net/2019/05/25/5ce8ee8600acd59452.png" alt></p><p>2.查看和设置回滚段的管理模式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW PARAMETER UNDO_MANAGEMENT</span><br></pre></td></tr></table></figure><br><img src="https://i.loli.net/2019/05/25/5ce8efc2af30021304.png" alt><br><figure class="highlight plain"><figcaption><span>将回滚段管理模式设置为手动管理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter system set UNDO_MANAGEMENT = MANUAL</span><br><span class="line">SCOPE = SPFILE;</span><br></pre></td></tr></table></figure></p><p>3.创建回滚段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE [PUBLIC] ROLLBACK SEGMENT 回滚段名称</span><br><span class="line"> TABLESPACE T1</span><br><span class="line"> STORAGE 存储选项：&#123;</span><br><span class="line"> inital 5M</span><br><span class="line"> next 2M</span><br><span class="line"> maxextents unlimited</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>4.修改回滚段的属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.设置状态</span><br><span class="line">alter rollback segment 回滚段名称 online</span><br><span class="line">2.手动收缩回滚段</span><br><span class="line">3.alter rollback segment 回滚段名称 shrink to 回滚段的初始大小</span><br></pre></td></tr></table></figure><br>5.删除回滚段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter rollback segment 回滚段名称 offline //先脱机</span><br><span class="line">drop rollback segment 回滚段名称</span><br></pre></td></tr></table></figure></p><hr><h2 id="二、数据库文件管理"><a href="#二、数据库文件管理" class="headerlink" title="二、数据库文件管理"></a>二、数据库文件管理</h2><p>1.SCN(System Change Number）<br>(1).控制文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name from v$controlfile;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2019/05/30/5cefa06f1538063291.png" alt><br><img src="https://i.loli.net/2019/05/30/5cefa0d36563426778.png" alt><br><a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/CREATE-CONTROLFILE.html#GUID-9B389F28-C4D0-405D-BFE6-48237E8BD791" target="_blank" rel="noopener">CREATE CONTROLFILE官方文档</a></p><p>(2).重做日志文档<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">col MEMBER  for A40</span><br><span class="line">select GROUP# ,MEMBER  from v$logfile(v$log);</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2019/05/30/5cefa3ac9b54b80023.png" alt></p><p>(3).归档日志管理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,log_mode from v$database;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2019/05/30/5cefa6d6ce67c56736.png" alt></p>]]></content>
    
    <summary type="html">
    
      回滚段的管理、数据库文件管理（控制文件，重做日志文件，归档文件）
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle---2</title>
    <link href="www.yqxblog.top/Oracle/Oracle---2/"/>
    <id>www.yqxblog.top/Oracle/Oracle---2/</id>
    <published>2019-05-16T13:40:00.000Z</published>
    <updated>2019-05-25T07:17:42.266Z</updated>
    
    <content type="html"><![CDATA[ 表空间  <a id="more"></a> <p>一、查看表空间信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select * from v$tablespace;</span><br><span class="line">select tablespace_name,contents,status from dba_tablespaces;//属性信息</span><br><span class="line">select * from dba_segments;//查看段信息；</span><br><span class="line">select * from dba_free_space;//查看表空间中空闲区间的信息；</span><br><span class="line">select * from dba_data_files;//查询所有数据文件的信息；</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><img src="https://i.loli.net/2019/05/16/5cdd629ca449598241.png" alt><br><img src="https://i.loli.net/2019/05/16/5cdd63220fe8f38869.png" alt></p><p>统计表空间的额总空间大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select tablespace_name as 表空间名,SUM(bytes)</span><br><span class="line">from dba_data_files</span><br><span class="line">group by tablespace_name;</span><br></pre></td></tr></table></figure><br><img src="/20190516205734005/20190516092249751.png" alt><br>统计表空间的空闲空间大小和表空间的使用情况 P87</p><p>二、创建表空间<br>Create [UNDO] Tablespace 表空间名<br>【datafile子句<br>【{ MINNUM EXTENT 整数 [k|m]<br>| BLOCKSIZE 整数 [k]<br>|logging子句<br>|FORCE LOGGING<br>|DEFAULT{是否压缩数据段}存储子句<br>| [online|offline]<br>| [permanent|tempopary]<br>| 区间管理子句<br>| 段管理子句 }】<br><figure class="highlight plain"><figcaption><span>1.创建本地表空间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create tablespace t1 datafile &apos;&apos; size 10G;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><figcaption><span>2.创建大文件表空间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create bigfile tablespace t1 datafile &apos;&apos; size 10G;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><figcaption><span>3.创建临时表空间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create temporary tablespace t1 datafile &apos;&apos; size 10M </span><br><span class="line">reuse</span><br><span class="line">extent managemant local uniform size 16m;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>4.定义表空间的段管理方式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create  tablespace t1 datafile &apos;&apos; size 10M </span><br><span class="line">extent managemant local autoallocate</span><br><span class="line">segment space management auto;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>5.创建撤销表空间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create  undo tablespace t1 datafile &apos;&apos; size 10m reuse;</span><br></pre></td></tr></table></figure><p>三、设置和修改表空间属性<br> <figure class="highlight plain"><figcaption><span>1.重命名表空间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace 表空间名字 rename to 表空间新名字;</span><br></pre></td></tr></table></figure><br> <figure class="highlight plain"><figcaption><span>2.向本地表空间增加数据文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace t1 add datafile &apos;&apos; size 10m;</span><br></pre></td></tr></table></figure><br>  <figure class="highlight plain"><figcaption><span>3.修改大文件表空间属性</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace t1 resize 10G;</span><br></pre></td></tr></table></figure><br>  <figure class="highlight plain"><figcaption><span>4.向临时表空间中添加临时文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace t1 add tempfile d1 size 10m;</span><br></pre></td></tr></table></figure><br>  <figure class="highlight plain"><figcaption><span>5.设置表空间的状态</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter tablespace 表空间名字 offline||online||only||write</span><br></pre></td></tr></table></figure></p><p>四、删除表空间<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop tablespace t1 including contents and datafiles;</span><br><span class="line"> </span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      表空间
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle---1</title>
    <link href="www.yqxblog.top/Oracle/Oracle---1/"/>
    <id>www.yqxblog.top/Oracle/Oracle---1/</id>
    <published>2019-05-16T12:40:00.000Z</published>
    <updated>2019-05-25T07:19:32.801Z</updated>
    
    <content type="html"><![CDATA[启动EM ，创建数据库，启动数据库，配置情况，维护数据库(shutdown 和 startup)<a id="more"></a> <p><br><br>一、启动 Oracle Enterprise Manager<br>在确认OracleDBConsoleoracl服务已经启动后后<br>https:// oracle数据库服务器名称:&lt;Em端口号&gt;/em<br><a href="https://orcl:1158/em" target="_blank" rel="noopener">https://orcl:1158/em</a></p><figure class="highlight plain"><figcaption><span>cmd下</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog</span><br><span class="line">conn /as sysdba</span><br><span class="line">//nolog下以sysdba身份进入Oracle</span><br><span class="line">startup pfile=&apos;E:\app\ajwlf\admin\orcl\pfile\init.ora.1282019185223&apos;</span><br><span class="line">//开启数据库实例</span><br><span class="line"></span><br><span class="line">重新启动监听程序。</span><br><span class="line"></span><br><span class="line">lsnrctl stop // 关闭</span><br><span class="line"></span><br><span class="line">lsnrctl start // 启动</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$select name,created from v$database;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/05/16/5cdd53c92abde25018.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$select * from v$version;  //查看数据库的详细版本信息</span><br></pre></td></tr></table></figure><br><img src="https://i.loli.net/2019/05/16/5cdd564a7f41b64286.png" alt></p><p>二、创建数据库</p><ol><li>使用 Database Configuration Assitant 工具创建数据库实例 具体见书的49页</li><li>使用DBCA命令</li><li>创建数据库 书P55</li><li>使用SQL语句创建数据库 ordim -new -sid &lt;实例名&gt; -intpwd OraclePass</li><li>创建文本初始化参数文件（PFILE）</li></ol><p>三、删除数据库<br>1.Database Configuration Assitant<br>2.使用DBCA命令<br>3.使用DROP DATABASE 语句删除数据库</p><p>四、配置情况<br>查看初始化参数:<br>1.em<br>2.SHOW　ＰＡＲＡＭＥＴＥＲ<br>ＳＨＯＷ PARAMETERS ｄｂ　查看所有以ｄｂ开头的初始化参数<br><img src="https://i.loli.net/2019/05/16/5cdd5b3603ae862022.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select　name,value,display_value from v$parameter</span><br><span class="line">where name like &apos;%db%&apos; ;</span><br></pre></td></tr></table></figure></p><p>四、维护数据库<br>1.使用shutdown命令关闭数据库实例<br>（1）正常关闭:shutdown normal;<br> (2) 以处理事务方式来关闭：shutdown transactional;<br> (3) 立即关闭： shutdown immediate<br> (4) 中止关闭数据库实例： shutdown abott</p><p>2.使用startup命令打开数据库实例<br>  (1) 正常启动： startup<br>  (2) 以指定的初始化参数文件启动 Startup PFILE=‘’；<br>  (3) 启动数据库实例。但不装载数据库 startup nomount<br>  (4) 启动数据库实例。装载数据库 startup mount<br>  (5) 强制启动数据库实例： startup force<br>  (6) 以限制模式启动数据库实例：startup restrict<br>  (7) 在数据库启动是开始介质恢复： startup recovery</p><p>  3.使用alter database命令来改变启动模式<br>  alter database mount<br>  alter database open<br>  alter database open read only</p>]]></content>
    
    <summary type="html">
    
      启动EM ，创建数据库，启动数据库，配置情况，维护数据库(shutdown 和 startup)
    
    </summary>
    
      <category term="Oracle" scheme="www.yqxblog.top/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="www.yqxblog.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--8</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--8/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--8/</id>
    <published>2019-05-09T13:40:00.000Z</published>
    <updated>2019-05-09T15:39:19.850Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--7</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--7/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--7/</id>
    <published>2019-05-08T13:40:00.000Z</published>
    <updated>2019-05-08T07:44:20.143Z</updated>
    
    <content type="html"><![CDATA[<p>文档处理<br>一、添加节点<br> <img src="https://i.loli.net/2019/05/08/5cd278d3dc5ac.png" alt><br> 1.内部插入<br> $(“ul”).append(“”);<br> append 会将元素添加到指定元素内部的最后<br> prepend 会将元素添加到指定元素内部的最前面</p><p> appendTo<br> prepend  与上面两个一样，书写的格式是反的。<br> 2.外部插入<br> after 会将元素添加到指定元素外部的后面。<br> brfore 会将元素添加到指定元素内部的前面</p><p> insertAfter<br> insertBefore 与上面两个一样，书写的格式是反的。</p><p> 二、删除节点及其相关方法<br>  remove() 删除指定元素<br>  empty()  清空元素内部内容与子元素<br>  detach() 和remove一样</p><p>  三、替换节点<br>  replaceWith()  $(“h1”).replaceWith($h6)<br>  replaceAll()    $h6.replaceAll(“h1”);</p><p>  三、复制节点<br>  1.浅复制节点<br>  var $li = $(“li:first”).clone(fasle);  只复制元素，不复制事件<br>  2.深复制节点<br>  var $li = $(“li:first”).clone(true);  全部复制</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文档处理&lt;br&gt;一、添加节点&lt;br&gt; &lt;img src=&quot;https://i.loli.net/2019/05/08/5cd278d3dc5ac.png&quot; alt&gt;&lt;br&gt; 1.内部插入&lt;br&gt; $(“ul”).append(“”);&lt;br&gt; append 会将元素添加到指
      
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--6</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--6/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--6/</id>
    <published>2019-04-28T02:40:00.000Z</published>
    <updated>2019-05-08T06:33:17.914Z</updated>
    
    <content type="html"><![CDATA[淡入和淡出动画,自定义动画，stop和delay方法,图标特效<a id="more"></a><p>一、淡入和淡出动画<br>$(“”).fadeIn(1000,function(){});<br>$(“”).fadeOut(1000,function(){});<br>$(“”).fadeToggle(1000,function(){});<br>$(“”).fadeTo(1000,0.2,function(){});</p><p>二、自定义动画</p><p>$(“”).animate({},1000,function(){});<br>第一个参数可以修改对象属性<br>example：<br>$(“.one”).animate({width:500},1000,function(){alert(“自定义动画”);});  //动画1s后弹出alert</p><p>时间参数后可以加： linear 和 swing 匀速和缓动  //也可以在基本动画里面使用，一般企业操作不会用<br>example：<br>$(“.one”).animate({width:500},1000,”linear”,function(){alert(“自定义动画”);});  //动画1s后弹出alert<br>$(“.one”).animate({width:500},1000,”swing”,function(){alert(“自定义动画”);});  //动画1s后弹出alert</p><p>属性可以累加<br>width: “+=100”<br>example：<br>$(“.one”).animate(width: “+=100”},1000,”swing”,function(){alert(“自定义动画”);});  //动画1s后弹出alert</p><p>关键字:<br>width: “hide”  width: “toggle”<br>example：<br>$(“.one”).animate(width: “hide”},1000,”swing”,function(){alert(“自定义动画”);});  //动画1s后弹出alert</p><p>多个属性同时修改会同时执行<br>多个单个属性在同一动画队列里会先后执行。</p><p>三、jQuery的stop和delay方法<br>1.delay<br>$(“”).animate({},1000,function(){}).delay(time).animate({},1000,function(){});;<br>$(“.one”).animate(width: “+=100”},1000,”swing”,function(){alert(“自定义动画”);}).delay(20000).animate(height: “+=100”},1000,”swing”,function(){alert(“自定义动画”);});<br>2.stop<br>(1).$(“”).stop()；//$(“”).stop(false)；.$(“”).stop(false,false)； 没有参数，表示立即停止当前的动画，继续执行后续执行的动画；<br>(2).$(“”).stop(true)；//.$(“”).stop(true,false)； //立即停止当前和后续的所有动画<br>(3).$(“”).stop(false,true）；//立即完成当前但停止所有后续的后续的所有动画</p><p>finish和stop差不多，不讲了。。</p><p>设置<br>1.off 打开或关闭全局动画的<br>jQuery.fc.off=true; 关闭；<br>2.interval<br>jQuery.fc.interval=5;<br>默认值是13，值越小，动画越流畅，对浏览器要求越高。</p><p>无限循环滚动:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;图片滚动&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin : 0;</span><br><span class="line">            padding :  0;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .imgbox&#123;</span><br><span class="line">            width:600px;</span><br><span class="line">            height:300px;</span><br><span class="line">            margin:100px auto;</span><br><span class="line">           overflow: hidden;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .imgbox&gt;ul&#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">            width: 1800px;</span><br><span class="line">            height:300px;</span><br><span class="line">            background: black;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .imgbox&gt;ul&gt;li&#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            float:left;</span><br><span class="line">        &#125;</span><br><span class="line">        .imgbox&gt;ul&gt;li&gt;span&#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            background: #2ecc71;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">     &lt;script src=&quot;jQuery/js/jquery-3.4.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">         &lt;script&gt;</span><br><span class="line">             $(function()&#123;</span><br><span class="line">               //编写jQuery相关代码</span><br><span class="line">                 //1.图片设置</span><br><span class="line">                 var s= [&quot;#1abc9c&quot;,&quot;#9b59b6&quot;,&quot;#e67e22&quot;,&quot;#95a5a6&quot;,&quot;#1abc9c&quot;,&quot;#9b59b6&quot;];</span><br><span class="line">                 $(&quot;li&quot;).each(function (index) &#123;</span><br><span class="line">                     $(this).children(&quot;span&quot;).css(&quot;background&quot;,s[index]);</span><br><span class="line">                 &#125;)</span><br><span class="line">                 //2.定时器设置</span><br><span class="line">                 var timer ;</span><br><span class="line">                 var offset = 0;</span><br><span class="line">                 function CreateTimer() &#123;</span><br><span class="line"></span><br><span class="line">                     timer = setInterval(function () &#123;</span><br><span class="line">                         offset-=10;</span><br><span class="line">                         if(offset===-1200) offset=0;</span><br><span class="line">                         $(&quot;.imgul&quot;).css(&quot;margin-left&quot;,offset);</span><br><span class="line">                         console.log(offset);</span><br><span class="line">                     &#125;,50);</span><br><span class="line">                 &#125;</span><br><span class="line">                CreateTimer();</span><br><span class="line"></span><br><span class="line">                 $(&quot;li&quot;).hover(function () &#123;</span><br><span class="line">                         clearInterval(timer);</span><br><span class="line">                         $(this).siblings().fadeTo(100,0.5);</span><br><span class="line">                         $(this).fadeTo(100,1);</span><br><span class="line">                 &#125;,</span><br><span class="line">                 function () &#123;</span><br><span class="line">                        CreateTimer();</span><br><span class="line">                     $(&quot;li&quot;).fadeTo(100,1);</span><br><span class="line">                 &#125;)</span><br><span class="line">             &#125;);</span><br><span class="line">         &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;imgbox&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;imgul&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span&gt;&lt;/span&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      淡入和淡出动画,自定义动画，stop和delay方法,图标特效
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--5</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--5/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--5/</id>
    <published>2019-04-26T13:40:00.000Z</published>
    <updated>2019-04-28T02:46:10.162Z</updated>
    
    <content type="html"><![CDATA[jQuery基本动画的显示与隐藏，jQuery 展开和收起动画，对联广告的显示与关闭，折叠菜单<a id="more"></a><p>一、jQuery基本动画的显示与隐藏<br>1.$(“div”).show(1000); //1000ms显示出来<br>2.$(“div”).show(1000，function（）{});<br>//动画结束后执行函数<br>3.切换动画$(“div”).toggle(1000)；<br>1000ms完成切换。如果隐藏就显示，如果是显示就隐藏.<br>‘</p><p>二、jQuery 展开和收起动画<br>$(“”).slideDown(1000,funciton(){});<br>$(“”).slideUp(1000,funciton(){});<br>$(“”).slideToggle(1000,funciton(){});</p><p>实例：对联广告的显示与关闭<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;对联广告&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        .img&#123;</span><br><span class="line">            width:192px;</span><br><span class="line">            height:240px;</span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 40%;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        .left&#123;</span><br><span class="line">            left: 0%;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            right: 0%;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"> &lt;script src=&quot;jQuery/js/jquery-3.4.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         $(function()&#123;</span><br><span class="line">           //编写jQuery相关代码</span><br><span class="line">             $(window).scroll(</span><br><span class="line">                 function () &#123;</span><br><span class="line">                     //获取网页滚动偏移位</span><br><span class="line">                    var offset = $(&quot;html,body&quot;) .scrollTop();</span><br><span class="line">                     console.log(offset);</span><br><span class="line">                     if(offset&gt;=300)</span><br><span class="line">                        $(&quot;.img&quot;).show(500);</span><br><span class="line">                    else</span><br><span class="line">                     $(&quot;.img&quot;).hide(500);</span><br><span class="line"></span><br><span class="line">                 &#125;</span><br><span class="line">             );</span><br><span class="line">         &#125;);</span><br><span class="line">     &lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img class=&quot;img left&quot; src=&quot;img/lisa1.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;img class=&quot;img right&quot;src=&quot;img/lisa1.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><figcaption><span>折叠菜单</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;折叠菜单&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">*&#123;</span><br><span class="line">    padding: 0;</span><br><span class="line">    margin: 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    .nav&#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">        width: 300px;</span><br><span class="line">        margin: 100px auto;</span><br><span class="line">    &#125;</span><br><span class="line">    .nav&gt;li&#123;</span><br><span class="line">        text-indent: 1em;</span><br><span class="line">        border: 1px solid #000;</span><br><span class="line">        line-height: 35px;</span><br><span class="line">        border-bottom: none;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">  .nav&gt;li:first-child&#123;</span><br><span class="line">      border-top-left-radius: 10px;</span><br><span class="line">      border-top-right-radius: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">   .nav&gt;li:last-child&#123;</span><br><span class="line">       border-bottom: 1px solid #000;</span><br><span class="line">       border-bottom-left-radius: 10px;</span><br><span class="line">       border-bottom-right-radius: 10px;</span><br><span class="line">   &#125;</span><br><span class="line">    .nav&gt;li&gt;span&#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 20px;</span><br><span class="line">        top: 10px;</span><br><span class="line">        width:15px;</span><br><span class="line">        height: 15px;</span><br><span class="line">        border-top: 1.5px solid #000;</span><br><span class="line">        border-right: 1.5px solid #000;</span><br><span class="line">        transform: rotate(45deg);</span><br><span class="line">        transition: 0.4s;</span><br><span class="line">  &#125;</span><br><span class="line">    .sub&#123;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"> .sub&gt;li&#123;</span><br><span class="line">     text-indent: 2em;</span><br><span class="line">     border: 1px solid #000;</span><br><span class="line">     line-height: 25px;</span><br><span class="line">     list-style: none;</span><br><span class="line">     background: mediumpurple;</span><br><span class="line"> &#125;</span><br><span class="line"> .nav&gt;.c&gt;span&#123;</span><br><span class="line">     transform: rotate(135deg);</span><br><span class="line"> &#125;</span><br><span class="line">.sub&gt;li:hover&#123;</span><br><span class="line">    background: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"> &lt;script src=&quot;jQuery/js/jquery-3.4.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         $(function()&#123;</span><br><span class="line">           //编写jQuery相关代码</span><br><span class="line">             //监听一级菜单</span><br><span class="line">             var level1 = $(&quot;.nav&gt;li&quot;);</span><br><span class="line">             level1.click(</span><br><span class="line">                 function () &#123;</span><br><span class="line">                     //拿二级菜单并展开</span><br><span class="line">                    var sub =  $(this).children(&quot;.sub&quot;);</span><br><span class="line">                     console.log($(this).attr(&quot;class&quot;));</span><br><span class="line">                     if ( $(this).attr(&quot;class&quot;)=== undefined)</span><br><span class="line">                     $(this).attr(&quot;class&quot;,&quot;c&quot;);</span><br><span class="line">                     else</span><br><span class="line">                      $(this).removeAttr(&quot;class&quot;);</span><br><span class="line">                     sub.slideToggle(200);</span><br><span class="line">                     $(this).siblings().children(&quot;.sub&quot;).slideUp();</span><br><span class="line">                     $(this).siblings().removeAttr(&quot;class&quot;);</span><br><span class="line">             &#125;</span><br><span class="line">             );</span><br><span class="line">         &#125;);</span><br><span class="line">     &lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;li &gt;一级菜单 &lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">        &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">            &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;一级菜单&lt;span &gt;&lt;/span&gt;</span><br><span class="line">    &lt;ul class=&quot;sub&quot;&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;二级菜单&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      jQuery基本动画的显示与隐藏，jQuery 展开和收起动画，对联广告的显示与关闭，折叠菜单
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--4</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--4/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--4/</id>
    <published>2019-04-26T05:40:00.000Z</published>
    <updated>2019-04-27T03:32:14.651Z</updated>
    
    <content type="html"><![CDATA[事件的绑定,jQuery事件的冒泡和默认的行为，jQuery事件自动触发，自定义事件，jQuery的事件委托 <a id="more"></a><p><br></p><p>一、事件的绑定与解绑<br>1.$(“button”).click(function(){});<br>2.$(“button”).on(“click”,function(){});<br>第一种效率高，部分事件jQuery没实现，所以不能添加。<br>第二种效率低，时间全<br>两者都可以添加多个相同或多个不同内容的事件，且不会被覆盖</p><p>$(“button”).off();<br>//不传递参数，会移除所有事件<br>$(“button”).off(“click”);<br>//传递一个参数，会移除所有指定类型的事件<br>$(“button”).off(“click”，test);<br>//传递二个参数，会溢出指定类型的指定事件</p><p>二、jQuery事件的冒泡和默认的行为</p><p>冒泡：子元素事件触发父元素事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;.son&quot;).click(function(event)&#123;</span><br><span class="line">alert(&quot;hh&quot;);</span><br><span class="line">//两种方式阻止冒泡</span><br><span class="line">//1.return faslse;</span><br><span class="line">//2.event.stopPropagation(); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>默认行为:网页元素，都有自己的默认行为，例如，单击超链接会跳转…<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;a&quot;).click(function(event)&#123;</span><br><span class="line">alert(&quot;hh&quot;);</span><br><span class="line">//两种方式阻止默认行为</span><br><span class="line">//1.return faslse;</span><br><span class="line">//2.event.preventDefalut(); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>三、jQuery事件自动触发<br>1.$(“”).trriger(“click”);//都会<br>2.$(“”).trrigerHandle(“click”);//不会触发事件冒泡和默认行为</p><p>a比较特殊，两种不会有默认行为。<br><figure class="highlight plain"><figcaption><span>a的时候自动触发事件且有默认行为</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;span&quot;).click(function()&#123;alert(&quot;sss&quot;)&#125;);</span><br><span class="line">.$(&quot;span&quot;).trriger(&quot;click&quot;);</span><br><span class="line">.$(&quot;span&quot;).trrigerHandle(&quot;click&quot;);</span><br><span class="line">&lt;a href=&quot;&quot;&gt;&lt;span&gt;sss&lt;/span&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>四、自定义事件</p><p>.$(“span”).on(“Myclick”，function(){alert(“sss”)});<br>.$(“span”).trriger(“Myclick”);</p><p>ps:<br>1.不能用$(“”).click;<br>2.function(event)不能用event；<br>3.必须用trigger触发用on绑定。</p><p>五、jQuery事件命名空间<br>.$(“”).on(“click.zs”,function(){});<br>.$(“”).on(“click.ls”,function(){});</p><p>.$(“”).trriger(“click.zs”);<br>ps: on+trigger</p><p>jQuery事件命名空间面试题：<br><img src="https://i.loli.net/2019/04/26/5cc2a4c4c4592.png" alt></p><p>五、jQuery的事件委托<br>事件委托:请别人帮忙做事，然后将做完的结果反馈给我们</p><p><img src="https://i.loli.net/2019/04/26/5cc2a8cf4e86c.png" alt><br>利用已经又得ul来监听还未生成得元素。<br><img src="https://i.loli.net/2019/04/26/5cc2a935c6767.png" alt></p><p>事件委托例子： 登陆界面的显示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        html,body&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line">        .mask&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background: rgba(0,0,0,0.5);</span><br><span class="line">            position: fixed;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .login&#123;</span><br><span class="line">            width: 656px;</span><br><span class="line">            height:  360px;</span><br><span class="line">            margin: 150px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">        .login&gt;span</span><br><span class="line">        &#123;</span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 0px;</span><br><span class="line">            top: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script src=&quot;register/js/jquery-3.4.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">         &lt;script&gt;</span><br><span class="line">             $(function()&#123;</span><br><span class="line">               //编写jQuery相关代码</span><br><span class="line"></span><br><span class="line">                 //</span><br><span class="line">                 $(&quot;a&quot;).click(</span><br><span class="line">                     function()</span><br><span class="line">                     &#123;</span><br><span class="line">                         var $mask = $(&quot; &lt;div class=\&quot;mask\&quot;&gt;\n&quot; +</span><br><span class="line">                             &quot;        &lt;div class=\&quot;login\&quot;&gt;\n&quot; +</span><br><span class="line">                             &quot;            &lt;img src=\&quot;img/login.png\&quot; alt=\&quot;\&quot;&gt;\n&quot; +</span><br><span class="line">                             &quot;            &lt;span&gt;&lt;/span&gt;\n&quot; +</span><br><span class="line">                             &quot;        &lt;/div&gt;\n&quot; +</span><br><span class="line">                             &quot;    &lt;/div&gt;&quot;);</span><br><span class="line">                         $mask.insertBefore(&quot;a&quot;);</span><br><span class="line">                    $(&quot;body&quot;).delegate(&quot;.login&gt;span&quot;,&quot;click&quot;,function () &#123;</span><br><span class="line"></span><br><span class="line">                        $mask.remove();</span><br><span class="line">                    &#125;);</span><br><span class="line">                         return false;</span><br><span class="line">                     &#125;</span><br><span class="line">                 );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             &#125;);</span><br><span class="line">         &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;&quot;&gt;点我登陆&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss sssssssssssssssssssssssssssssssssssssssssssssssssssssss&lt;/span&gt;</span><br><span class="line">&lt;div class=&quot;mask&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;login&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;img/login.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;span&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>六、jQuery移入移出事件<br>//子元素移入移出也会触发父元素事件。<br>$(“”).mouserover();<br>$(“”).mouserout();<br>//不会触发父元素的方法<br>$(“”).mouseenter();<br>$(“”).mouseleave();<br>$(“”).mousehover(function(){},function(){});//内部就是enter和leave<br>一个参数就是既监听移入又监听移出</p><p>实例： Tab选项卡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Tab选项卡&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box&#123;</span><br><span class="line">            width:440px;</span><br><span class="line">            height:300px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        .nav&gt;ul&gt;li&#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">            width:110px;</span><br><span class="line">            height:60px;</span><br><span class="line">            background: orange;</span><br><span class="line">            line-height: 60px;</span><br><span class="line">            float: left;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .nav&gt;ul&gt;.current&#123;</span><br><span class="line">            background: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .img&gt;li</span><br><span class="line">        &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        .img&gt;.show&#123;</span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">        .img&gt;li&gt;img&#123;</span><br><span class="line">            width:440px ;</span><br><span class="line">            height: 240px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">     &lt;script src=&quot;jQuery/js/jquery-3.4.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">         &lt;script&gt;</span><br><span class="line">             $(function()&#123;</span><br><span class="line">               //编写jQuery相关代码</span><br><span class="line">                  var $navli =$(&quot;.nav&gt;ul&gt;li&quot;);</span><br><span class="line">                 $navli.mouseenter(</span><br><span class="line">                     function () &#123;</span><br><span class="line">                         $(this).siblings().removeClass();</span><br><span class="line">                         $(this).addClass(&quot;current&quot;);</span><br><span class="line">                         var index = $(this).index();</span><br><span class="line">                         var $img = $(&quot;.img&gt;li&quot;).eq(index);</span><br><span class="line">                         $img.siblings().removeClass(&quot;show&quot;);</span><br><span class="line">                         $img.addClass(&quot;show&quot;);</span><br><span class="line">                     &#125;</span><br><span class="line">                 );</span><br><span class="line"></span><br><span class="line">             &#125;);</span><br><span class="line">         &lt;/script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;nav&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li class=&quot;current&quot;&gt;万水千山&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;大雪无痕&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;雨中氤氲&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;雾气弥漫&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;ul class=&quot;img&quot;&gt;</span><br><span class="line">        &lt;li class=&quot;show&quot;&gt;&lt;img src=&quot;img/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;img src=&quot;img/2.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;img src=&quot;img/3.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;img src=&quot;img/4.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      事件的绑定,jQuery事件的冒泡和默认的行为，jQuery事件自动触发，自定义事件，jQuery的事件委托
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jQuery的学习--3</title>
    <link href="www.yqxblog.top/html/jQuery/jQuery%E7%9A%84%E5%AD%A6%E4%B9%A0--3/"/>
    <id>www.yqxblog.top/html/jQuery/jQuery的学习--3/</id>
    <published>2019-04-26T00:40:00.000Z</published>
    <updated>2019-04-26T05:28:22.610Z</updated>
    
    <content type="html"><![CDATA[类的操作，操作css样式的方法，jQuery位置和尺寸操作的方法，ScrollTop方法 <a id="more"></a><p>一、类的操作<br>1.添加类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.class1&#123;</span><br><span class="line"> padding:10px;</span><br><span class="line"> background:red;</span><br><span class="line"> border: 5px solid red;</span><br><span class="line">&#125;</span><br><span class="line">$(&quot;div&quot;).addClass(&quot;class1&quot;);</span><br><span class="line">//想要删除多个类:</span><br><span class="line">$(&quot;div&quot;).addClass(&quot;class1 class2&quot;);</span><br></pre></td></tr></table></figure><br>2、 文本值相关操作</p><figure class="highlight plain"><figcaption><span>设置html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).html(&quot;&lt;p&gt;我是段落&lt;/p&gt;&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>获取html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).html();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>设置text纯文本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).html(&quot;&lt;p&gt;我是段落&lt;/p&gt;&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>获取纯文本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).html();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>设置value</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;input&quot;).val(&quot;请输入内容&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>获取value</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;input&quot;).val(); </span><br></pre></td></tr></table></figure><p>二、操作css样式的方法</p><figure class="highlight plain"><figcaption><span>1.逐个设置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).css（&quot;width&quot;,&quot;100px&quot;）;</span><br><span class="line">$(&quot;div&quot;).css（&quot;height&quot;,&quot;100px&quot;）;</span><br><span class="line">$(&quot;div&quot;).css（&quot;background&quot;,&quot;red&quot;）;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>2.链式设置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).css（&quot;width&quot;,&quot;100px&quot;）.css（&quot;height&quot;,&quot;100px&quot;）.css（&quot;background&quot;,&quot;red&quot;）;</span><br><span class="line">/注意点:大于三步建议分开；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>3.批量设置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).css(&#123;</span><br><span class="line">width:&quot;100px&quot;;</span><br><span class="line">height: &quot;100px&quot;;</span><br><span class="line">background: &quot;red&quot;</span><br><span class="line">&#125;);</span><br><span class="line">//企业中建议使用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>1.获取css值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;div&quot;).css（&quot;width&quot;）;</span><br><span class="line">$(&quot;div&quot;).css（&quot;height&quot;）;</span><br><span class="line">$(&quot;div&quot;).css（&quot;background&quot;）;</span><br></pre></td></tr></table></figure><p>三、jQuery位置和尺寸操作的方法<br>1.$(“.father”).width() //获取元素的宽度<br>$(“.father”).width(“500px”);//设置元素的宽度</p><p>2.$(“son”).offset().left; //获取元素距离窗口的偏移位<br>  $(“son”). offset({left: 10}); //设置元素距离窗口的偏移位</p><p>3.$(“son”).position().left;//position（） 获取元素距离<br>  $(“son”).css({left: “10px”});//position要这样设置</p><p>定位元素的偏移位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">*&#123; </span><br><span class="line">margin: 0;</span><br><span class="line">padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.faher&#123;</span><br><span class="line">width: 200px;</span><br><span class="line">height: 200px;</span><br><span class="line">backfround: red;</span><br><span class="line">margin-left:50px;</span><br><span class="line">position:relative;</span><br><span class="line">&#125;</span><br><span class="line">.son&#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">backgroud: blue;</span><br><span class="line">position: absolute;</span><br><span class="line">left: 50px;</span><br><span class="line">top: 50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(function()&#123;</span><br><span class="line">var btns = document.getElementByTagName(&quot;button&quot;);</span><br><span class="line"></span><br><span class="line">btns[0].onclick=function()&#123;</span><br><span class="line">//获取元素的宽度</span><br><span class="line">console.log($(&quot;.father&quot;).width());</span><br><span class="line">//获取元素距离窗口的偏移位</span><br><span class="line">$(&quot;son&quot;).offset().left;</span><br><span class="line">//position（） 获取元素距离定位元素的偏移位置</span><br><span class="line">$(&quot;son&quot;).position().left;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">btns[0].onclick=function()&#123;</span><br><span class="line">//设置元素的宽度</span><br><span class="line">$(&quot;.father&quot;).width(&quot;500px&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">$(&quot;son&quot;). offset(&#123;left: 10&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">注意点：position方法只能获取不能设置。</span><br><span class="line">$(&quot;son&quot;). position(&#123;left: 10&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">$(&quot;son&quot;).css(&#123;left: &quot;10px&quot;&#125;);//position要这样设置</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;father&quot;&gt;</span><br><span class="line">   &lt;div class=&quot;son&quot; &gt;</span><br><span class="line">   &lt;/div&gt; &lt;/div&gt;</span><br><span class="line">&lt;button&gt;获取&lt;/button&gt;</span><br><span class="line">&lt;button&gt;设置&lt;/button&gt;</span><br></pre></td></tr></table></figure></p><p> 四、ScrollTop方法<br> $(“”).scrollTop() 获取元素偏移位<br> $(“”).scrollTop(300) 设置元素偏移位</p><p> 获取网页移动的偏移位(因为IE里是0)<br> $(“body”).scrollTop() + $(“html”).scrollTop() ;<br>设置网页移动的偏移位<br>$(“html,body”).scrollTop(300)</p>]]></content>
    
    <summary type="html">
    
      类的操作，操作css样式的方法，jQuery位置和尺寸操作的方法，ScrollTop方法
    
    </summary>
    
      <category term="html" scheme="www.yqxblog.top/categories/html/"/>
    
      <category term="jQuery" scheme="www.yqxblog.top/categories/html/jQuery/"/>
    
    
      <category term="jQuery" scheme="www.yqxblog.top/tags/jQuery/"/>
    
      <category term="html" scheme="www.yqxblog.top/tags/html/"/>
    
  </entry>
  
</feed>
